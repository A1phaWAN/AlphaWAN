%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Sec5_3_spectrum_sharing.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: ASUS
%%CreationDate: 2025/7/19, 2:33:53
%%BoundingBox: 0 0 236 138
%%HiResBoundingBox: 0 0 235.6796 137.2239
%%CropBox: 0 0 235.6796 137.2239
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1144 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® 2021"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® 2021"
   xmp:CreateDate="2025-07-19T02:33:21+08:00"
   xmp:ModifyDate="2025-07-19T02:33:21+08:00"
   xmpMM:DocumentID="uuid:E06A4CF2-C1E8-4885-BCBF-D73E47A6A4BD"
   xmpMM:InstanceID="uuid:E06A4CF2-C1E8-4885-BCBF-D73E47A6A4BD">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>ZHANG, Ziyue [Student]</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -137.224 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 137.224 li
235.68 137.224 li
235.68 0 li
cp
clp
gsave
-.987762 137.446 mo
236.012 137.446 li
236.012 -.554581 li
-.987762 -.554581 li
-.987762 137.446 li
clp
gsave
-277.988 259.445 mo
563.812 259.445 li
563.812 -1454.27 li
-277.988 -1454.27 li
-277.988 259.445 li
eclp
.25 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
-277.988 259.552 mo
563.902 259.552 li
563.902 -1454.28 li
-277.988 -1454.28 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
.784 gry
@
grestore
1.75 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
44.3124 -145.885 mo
68.4924 -145.885 li
60.5824 -168.465 li
52.2124 -168.465 li
44.3124 -145.885 li
cp
false sop
.0471 gry
@
2 lw
0 lc
[40 8 16 8 ] 0 dsh
149.092 -860.095 mo
173.272 -860.095 li
165.362 -882.535 li
156.992 -882.535 li
149.092 -860.095 li
cp
@
62.6424 -860.095 mo
86.8124 -860.095 li
78.9124 -882.535 li
70.5424 -882.535 li
62.6424 -860.095 li
cp
@
1.75 lw
[7 3.5 ] 0 dsh
48.8424 -898.025 mo
73.0224 -898.025 li
65.1124 -920.605 li
56.7424 -920.605 li
48.8424 -898.025 li
cp
@
90.8824 -897.985 mo
115.062 -897.985 li
107.162 -920.575 li
98.7924 -920.575 li
90.8824 -897.985 li
cp
@
134.482 -897.985 mo
158.662 -897.985 li
150.762 -920.575 li
142.392 -920.575 li
134.482 -897.985 li
cp
@
2 lc
[] 0 dsh
36.8524 -936.005 mo
61.0324 -936.005 li
53.1224 -958.585 li
44.7524 -958.585 li
36.8524 -936.005 li
cp
@
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JAAAAA+Arial-BoldMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 53 /five put
dup 57 /nine put
dup 72 /H put
dup 77 /M put
dup 122 /z put
def
/FontBBox {-628 -376 2000 1056} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/space <1C60D8A8C9B854D00D> |-
/period <1C60D8A8C9B854D0F4570EAE6A30AD65CD290CE49005> |-
/zero <1C60D8A8C9B7EF322B11E05FFE0ABE458B5B9D35BBFC9E2424C903BE5
9618B38E770A10C557A7DAE4AF9B8974394BA7F6EE79F19BF1E52D3E917E0A66
52967CACD0A43E8D50F6DFAA8B81A509D916F7A1FFF849E9EEF6A6C7C97617E8
0EAD144F5EB715CA405BB88C384856785F5DC7E249F1CE4206AB9FF2DC6A477B
A5E9A3CC216B8CE053099E2B49A7D6F9098F44038145BD1695A4452EF4FDA86F
7658A5BE1DEBEAF> |-
/two <1C60D8A8C9B7EF322B68B7BD8B564E65606B3ECFDA3CF1C113B12ACD32
BC208D21D65A9D5F1A36C627279F72BBD1E489FE934B8EA91C0B22CC04AF790A
BB762A12D20E14A89D5E2D346829E8E44E89FC9C01BC229BB02B65FE36172AA8
EFAE28201356B4ABF89BDF14F3CBAA6E2EA7868D0C0671836D5438B987E57A81
6B316849EE062174D581D7765E3841B5A6190F> |-
/five <1C60D8A8C9B7EF322B1E263547A2C3DC5E265FD0C85254FBB08F67572
BAEA774E2C9B849E3F8B2719F02F5CA7D065CDC71B7C1F75853FD8A11429A649
61BA5619910F273C4D45A9F37C36DF26958450F67529F6031CF00FE3CEBD48D2
8D54223A5CF07B3FA23834AB6F627A08381EC1EF5CE1A40B1CBA99CFFD876F0F
4DD808DC1915F5186CA2ABF34> |-
/nine <1C60D8A8C9B7EF322B10E0BFB976DC04330FD22BECFADBD47637009C2
22D724F78A82A92E5C78F4F709846183A67B4862FB7C5966756D03C45DA90A30
29DBE8AF9FA80D2B7EB6EA167C09082D63AF26BF135514387BB83D3AB17107D9
5F47564F0A79E3794637C7A222B3530712E221A4AA15A9D31C1BCC58DFBD2457
CF6D56601A9B10AD08CE26FE2C1F2643207DA6EA4D55BA02C093F0CEE9B0648C
773D76ECE62881CB64371C368E4D1AE86B3A2D43196BD0F0173D6298D36D5> |-
/H <1C60D8A8C9B6079F62C490F8B363FF19A3781C29D5570EF5D5A716BB3575
8C02EF9D91F0CEA78D1860E5A66A118D> |-
/M <1C60D8A8C9B6B41CBB10CBFB014CB2DAA60D1E6213C9A6221D8277F76E5B
198F877B8BD7F16B9ED33B8CC69F5CB1810DCABD4C90C49E0AA0E1EE> |-
/z <1C60D8A8C9B7A73DB6C93814944206976D2A85AE792F67705D9D865F8997
40CB11B68A6C1C749F5915602D5058F2A86B476A6822B64CC544489B63FB3F85
D273F63F39CF> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT /JAAAAA+Arial-BoldMT findfont ct_VMDictPut
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
2{/.notdef}rp /five 3{/.notdef}rp /nine 14{/.notdef}rp /H 4{/.notdef}rp /M 
44{/.notdef}rp /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
51.0324 -1068.71 mo
(902.5 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
36.8524 -1161.52 mo
61.0324 -1161.52 li
53.1224 -1188.77 li
44.7524 -1188.77 li
36.8524 -1161.52 li
cp
.0471 gry
@
36.8524 -1203.48 mo
61.0324 -1203.48 li
53.1224 -1230.74 li
44.7524 -1230.74 li
36.8524 -1203.48 li
cp
@
0 lc
[7 3.5 ] 0 dsh
48.8424 -1203.48 mo
73.0224 -1203.48 li
65.1124 -1230.74 li
56.7424 -1230.74 li
48.8424 -1203.48 li
cp
@
2 lw
[16 8 16 8 2 8 ] 0 dsh
62.6424 -1203.48 mo
86.8124 -1203.48 li
78.9124 -1230.73 li
70.5424 -1230.73 li
62.6424 -1203.48 li
cp
@
1.75 lw
2 lc
[] 0 dsh
76.6424 -1203.44 mo
100.822 -1203.44 li
92.9124 -1230.69 li
84.5524 -1230.69 li
76.6424 -1203.44 li
cp
@
0 lc
[7 3.5 ] 0 dsh
90.8824 -1203.44 mo
115.062 -1203.44 li
107.162 -1230.69 li
98.7924 -1230.69 li
90.8824 -1203.44 li
cp
@
2 lw
[16 8 16 8 2 8 ] 0 dsh
105.492 -1203.48 mo
129.672 -1203.48 li
121.762 -1230.73 li
113.392 -1230.73 li
105.492 -1203.48 li
cp
@
gsave
59.3223 -1204.57 mo
54.7924 -1221.29 li
50.1524 -1204.57 li
59.3223 -1204.57 li
eclp
gsave
46.0124 -1202.27 mo
52.0122 -1202.27 li
52.0122 -1208.27 li
46.0124 -1208.27 li
46.0124 -1202.27 li
clp
grestore
grestore
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B62
9FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D4
43463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40
E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB
76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9
524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB6837
78C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C92
0ECC30772CD6DD1CCCB84D330E3FAA> |-
/e <1C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC355
0E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C
730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF
214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA9
4524E4E0809AB2B25573430347DD> |-
/r <1C60D8A8C9B7361F02EEC91E54B85D1C77E667FE2BCF3D09A421FBF63CB6
30EA2A0B7B19FFD8078B4DB5A7731C633809BCAB3FF296D65B89F29DE6B6DB35
AA635F12FEC0F1664A8FB613C79352FA72> |-
/s <1C60D8A8C9B7EF322FE651D521834CDC537E3DD6EDE0ABF561677B8E076D
DC9728066ABB56D1B743872DFE7AE020F0764CE3958A51AA0338BC1551D98AE3
FB37FA10E152AF1ED0A626D6C892D666067C463296034FB47068E23F64D99406
EC5C2C17229C4A63CE0EFA8720ACDB7F7406ADA1BC78971EA6415F0612916927
81A355051246F6EE6DC9DD910EE9B57ECB7AA0A970570176A3D15D1E3F2012D4
7AFFA014792503A125E8700D4C4B9A85575792648D6CE60E59BBF3015C0285B0> |-
/t <1C60D8A8C9B81F2C3AD0BF8CA40D7105A9B3D27345F202DEBDE44606EFD0
E90137AE13DC9D19FB7B4ABCA40FDADEB59FF02A690A47D6F26E8BDAADCFC051
3C14FCD80BF39C6AFCEFE1132622D45FBB576E32F86682C5BCCAD00B4E7E3753
50009EFCA5AC835906F56B697B29> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 97 /a put
dup 101 /e put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
2{/.notdef}rp /five 3{/.notdef}rp /nine 14{/.notdef}rp /H 4{/.notdef}rp /M 
19{/.notdef}rp /a 3{/.notdef}rp /e 12{/.notdef}rp /r /s /t 
5{/.notdef}rp /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-13.9176 -1214.15 mo
(Master )
[9.9599 6.70801 6.70801 3.99591 6.564 4.66809 0 ]xsh
1.75 lw
2 lc
[] 0 dsh
120.242 -1203.44 mo
144.422 -1203.44 li
136.522 -1230.69 li
128.152 -1230.69 li
120.242 -1203.44 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
134.482 -1203.44 mo
158.662 -1203.44 li
150.762 -1230.69 li
142.392 -1230.69 li
134.482 -1203.44 li
cp
@
2 lw
[16 8 16 8 2 8 ] 0 dsh
149.092 -1203.48 mo
173.272 -1203.48 li
165.362 -1230.73 li
156.992 -1230.73 li
149.092 -1203.48 li
cp
@
1.75 lw
[7 3.5 ] 0 dsh
48.8424 -1120.62 mo
73.0224 -1120.62 li
65.1124 -1147.87 li
56.7424 -1147.87 li
48.8424 -1120.62 li
cp
@
90.8824 -1120.57 mo
115.062 -1120.57 li
107.162 -1147.83 li
98.7924 -1147.83 li
90.8824 -1120.57 li
cp
@
134.482 -1120.57 mo
158.662 -1120.57 li
150.762 -1147.83 li
142.392 -1147.83 li
134.482 -1120.57 li
cp
@
2 lw
[16 8 16 8 2 8 ] 0 dsh
62.6424 -1078.97 mo
86.8124 -1078.97 li
78.9124 -1106.22 li
70.5424 -1106.22 li
62.6424 -1078.97 li
cp
@
105.492 -1078.97 mo
129.672 -1078.97 li
121.762 -1106.22 li
113.392 -1106.22 li
105.492 -1078.97 li
cp
@
149.092 -1078.97 mo
173.272 -1078.97 li
165.362 -1106.22 li
156.992 -1106.22 li
149.092 -1078.97 li
cp
@
1.75 lw
2 lc
[] 0 dsh
76.6424 -1161.51 mo
100.822 -1161.51 li
92.9124 -1188.77 li
84.5524 -1188.77 li
76.6424 -1161.51 li
cp
@
120.242 -1161.51 mo
144.422 -1161.51 li
136.522 -1188.77 li
128.152 -1188.77 li
120.242 -1161.51 li
cp
@
1.25 lw
0 lc
[5 2.5 ] 0 dsh
48.5424 -1235.5 mo
48.5424 -1160.18 li
0 gry
@
61.7024 -1235.17 mo
61.7024 -1116.16 li
@
%ADOBeginSubsetFont: WAAAAA+Arial-BoldItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /WAAAAA+Arial-BoldItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 70 /F put
dup 101 /e put
dup 113 /q put
dup 114 /r put
def
/FontBBox {-560 -376 1390 1018} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/period <1C60D8A8C9B854D0BB2BCBAEBB4A008C46AB0235BF9B> |-
/F <1C60D8A8C9B7D8BE166AED386FB8F65201AA3A35AFF6A37894D9DEEE0AA8
E6E5BEE00086C6A3C9AA35C7B84D77CF> |-
/e <1C60D8A8C9B7EF3224CFE21A04FB83F1C45A37777D179847B4EC86B1681D
F0F99CBBD414684BAFE73557D0E065AAAC81256CF83BE63EFBD3AF9BD69F9F87
14A4A2B32E3E594C3DF30F01568D0B36A70B75B5AADFF38717D024E3A1D9BC4A
EDF484C697CF9A2B7A61694B407AF3DBB6C86F1B9051369419BE53DEFC654B2F
835A366FFF7D34803565C3D20B2CABED35FFDE7B9891216B2A2B0E> |-
/q <1C60D8A8C9B7D8BE19FB4EA0787E06810B68FF1FBC597DFAFC76BEA31885
58E3D1B30874D10D9EA6E58BEB0A5256B8F0A261892A8CA001D3B9EA28BF3F12
07E735DD0943E7243F63617E8538175C3BA6410FE602BEF991D47C07A4761EE4
0D558C51D4B240A42B0FF71B8CBCA29A8FDA465B9288B7E39800B02E432BBCEA
C5E560315C0F52F380FB23B86FA1ED88AFB196076C6F4785ABE082A9C61417B1
FF94409D> |-
/r <1C60D8A8C9B7361F5EF709B7989AC3BC298794B6140D777839B5A64C013F
0C5B98F7B8C3A392C57C88712E6D3D72BFB0244A1B98F5AC6EF74A203B4AEC71
CBFBEF6382C15BA91B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHWXKJ+Arial-BoldItalicMT /WAAAAA+Arial-BoldItalicMT findfont ct_VMDictPut
/PHWXKJ+Arial-BoldItalicMT*1 
[46{/.notdef}rp /period 23{/.notdef}rp /F 30{/.notdef}rp /e 11{/.notdef}rp /q 
/r 141{/.notdef}rp]
PHWXKJ+Arial-BoldItalicMT nf
PHWXKJ+Arial-BoldItalicMT*1 [9.96 0 0 -9.96 0 0 ]msf
188.672 -1195 mo
(Freq.)
[6.10541 3.84464 5.62738 6.10541 0 ]xsh
1.75 lw
1 lc
1 lj
[] 0 dsh
183.572 -1161.47 mo
33.8124 -1161.47 li
@
182.772 -1164.66 mo
189.152 -1161.47 li
182.772 -1158.28 li
182.772 -1164.66 li
cp
ef
183.572 -1120.78 mo
33.8124 -1120.78 li
@
182.772 -1123.97 mo
189.152 -1120.78 li
182.772 -1117.59 li
182.772 -1123.97 li
cp
ef
183.572 -1078.97 mo
33.8124 -1078.97 li
@
182.772 -1082.16 mo
189.152 -1078.97 li
182.772 -1075.78 li
182.772 -1082.16 li
cp
ef
183.572 -1203.38 mo
33.8124 -1203.38 li
@
182.772 -1206.58 mo
189.152 -1203.38 li
182.772 -1200.2 li
182.772 -1206.58 li
cp
ef
.498 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7D8BE164A384446DA6B7BAA798AC9D25A30491D373B778ABE
DC450E08B3A2A56A100F> |-
/d <1C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B70A
6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F4776395
4952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319DD7
A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8A9
705A6EC736D21DD4607DF3> |-
/g <1C60D8A8C9B7D8BE2780ECF91BB8FE73517B0190DDC8DBC9897295332E6D
8EF13268DE217D7EA63F2C2488BA6624154001DFCD86A24A51CFE6922F8614F4
FD4481342B3992244B419F0D448BA14CBCD530939FD538BD00615A031E3CBF16
09B0E4C3D7F5A051C575D052C1A51F88B318CA9D0C7CFDFA53AA8FB2F2EE274E
E2F4C85657CA9E748262BB03EF446591D320994414EE439D72B9883F38366A41
CF501DCE32006C591422CCF439307E4D3088D90FF7CD2955301C96A46D1D1545
AF9D499025D541CB2077BD42919F91257F222D868E80527F0D65> |-
/q <1C60D8A8C9B7D8BE193750145692879620705A82E2A5BC250E5848EF31DB
08177C15B4A3282EFD7939504907B2D47230B9059EB9DFDDE257F9E847ED02E5
EBC9462E9E108B251F5333D2964A84C158892BA626E9742EC9F32A2FD31DC869
207DE65DB2AB672E92EAFC6DC2632268ACB4C2778D2BB6C6BBAD11F1CEAA2E7A
07129190A7CC1697B42F146D0972EE35F7> |-
/u <1C60D8A8C9B7D8BE193D97D4CEC9E264886B4FEB6039471A932F20C88E93
9BABF490859EEC52AD38B7ED294F8DF2A47649EF77BF43349A736D065D0A253D
952638D54F7BA1B47314F68FC1495C51454777F8F9475426838BE461BAFE9BF3
E443E03AAD9292AF57449A5275904AD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 70 /F put
dup 100 /d put
dup 103 /g put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
2{/.notdef}rp /five 3{/.notdef}rp /nine 12{/.notdef}rp /F /.notdef /H 
4{/.notdef}rp /M 19{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g 9{/.notdef}rp /q /r /s /t /u 4{/.notdef}rp 
/z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
104.042 -1069.19 mo
(Freq. guards)
[6.10541 3.84464 5.62738 6.10541 2.76889 2.76889 6.08548 6.12531 5.53778 3.82471 6.10541 0 
]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
110.262 -1151.39 mo
(902.9 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
1 lw
133.642 -1082.25 mo
145.362 -1082.25 li
.498 gry
@
134.252 -1079.81 mo
129.372 -1082.25 li
134.252 -1084.69 li
134.252 -1079.81 li
cp
ef
144.752 -1084.69 mo
149.632 -1082.25 li
144.752 -1079.81 li
144.752 -1084.69 li
cp
ef
25.1224 -1148.41 mo
80.7244 -1148.41 li
80.7244 -1160.55 li
25.1224 -1160.55 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
2 ml
[5 2.5 ] 0 dsh
75.3724 -1234.84 mo
76.0624 -1078.68 li
0 gry
@
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B11AFD403834AA517B3BBED643191F55B27328F
EB63F451B0BE1F10D9D06479DDD68A3F11CA764AA5C6CBF0B5C7F1C301A6A591
5C8FAEA13725EF990CAE8647E21075E73CDED65FE63CABC49E17A0A9B1472FC5
FEA356BED7487BBD0F11BE9FC7F02BAC4CE5305FC3A8F1C2CD653A5CD19861BE
7E9E1ACF93076B65DD47275F1EE66A142E3CAEAC4BF0ACC3175BC0B6E6C74B14
074CF18266AE35F9C580DC1CFAF9059882B070FDC40AC7466F256163FC8A2FCD
990A19F67EEB3B7512CC0EEACA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
/three /.notdef /five 3{/.notdef}rp /nine 12{/.notdef}rp /F /.notdef 
/H 4{/.notdef}rp /M 19{/.notdef}rp /a 2{/.notdef}rp /d /e 
/.notdef /g 9{/.notdef}rp /q /r /s /t /u 
4{/.notdef}rp /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
24.2424 -1151.68 mo
(902.3 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
25.1224 -1109.15 mo
80.7244 -1109.15 li
80.7244 -1119.64 li
25.1224 -1119.64 li
cp
1 gry
ef
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF322420EF37EFA369A3E85A331727D2F56920FCF46D3
327836C76686B8F0BA24C80FBB8E8161AC7300D3EA839C9098E33542E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
/three /four /five 3{/.notdef}rp /nine 12{/.notdef}rp /F /.notdef 
/H 4{/.notdef}rp /M 19{/.notdef}rp /a 2{/.notdef}rp /d /e 
/.notdef /g 9{/.notdef}rp /q /r /s /t /u 
4{/.notdef}rp /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
38.0424 -1110.71 mo
(902.4 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
161.132 -1235 mo
161.132 -1079.43 li
@
118.032 -1109.52 mo
173.634 -1109.52 li
173.634 -1118.99 li
118.032 -1118.99 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
124.232 -1110.64 mo
(903.0 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
90.9924 -1082.25 mo
101.712 -1082.25 li
.498 gry
@
91.6024 -1079.81 mo
86.7224 -1082.25 li
91.6024 -1084.69 li
91.6024 -1079.81 li
cp
ef
101.102 -1084.69 mo
105.982 -1082.25 li
101.102 -1079.81 li
101.102 -1084.69 li
cp
ef
140.702 -1189.98 mo
179.095 -1189.98 li
179.095 -1202.12 li
140.702 -1202.12 li
cp
1 gry
ef
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF32246DE93FF74C5C54EDFF42340E4AC32DE2C1D44EB6
EC091E31C85F92A02DF27893D65CF643F317F2> |-
/C <1C60D8A8C9B6079F6DE2AEDD76F722AB1905C7EE1983D1040F12090A2B6B
B93FD7976832C00E38F0C4C79BDBC9D981E45F6BB26E1DD13A0FA297509E8F73
D8E4A29558A673AA886D0B1CE2BDB03B1E58D12F23798709409D59C03EBEE5D9
CA02E1DEC19C7936D25A234D617C91BF02C16AA27F9D6F9EC37F9EB080F7BD6A
F1EE128160DD9B3DB18FE4> |-
/c <1C60D8A8C9B7EF32242001ABD2AFBBD336641D8D7284783472C96CFCC434
DFC100FC24422711A9090DEA4D32109037578992AFF27835B7F260887A799CBA
44C497ED942D76A3A4BD63536DE6F757481EB22D2DEF055F331ED9622202739A
C583596554B76ADC212E19C7FBCE810B4022B5DAB3AF3C114AF2730DCBE9D35C
B6B42E872730D77BAB> |-
/f <1C60D8A8C9B81F2C5A71D50B9B0701F5A31E22DDFBF554FF2D149AB14DDE
FC1B9ADBD8105EC88497FBC09B03794C95967111EB4354C8578F0E042075107F
9743D9A4F26007EA81109EB5443BB577E4EC9F8677529403BA64E3F5> |-
/h <1C60D8A8C9B7D8BE30E20DCA6EE6AB6CC3B52F6392A45738EC6E57C5FD4B
5006DD4CC13130165A71E6C8AD32848FD70F464465300BAF67B8EDC5E52749AF
8D970E7EFFDCC8EF63F6AB31364E59004A6FCF5A143C0BB48A0AC6C4FDED1312
DDD5BAEDEFE14256E656A094680FE5979938> |-
/l <1C60D8A8C9B854D0F4565C5D96D196F316A2594284F4> |-
/n <1C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC31
FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78CB
8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC6A
FD11F003818163793142F6A0F46BD84EFADF> |-
/y <1C60D8A8C9B7EF322B7536945647B4BA07C8DC342FF58A782AE941212DA9
36B500226D637B658433D28B8CA55D32CD6B9B1269E0231AED7EEAE92EA48D1A
B958BAD61D13401B6A794D4ED73191B8ADB547A985247846F2CB1E080C4F3C74
337DE0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 49 /one put
dup 67 /C put
dup 99 /c put
dup 102 /f put
dup 104 /h put
dup 108 /l put
dup 110 /n put
dup 121 /y put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 2{/.notdef}rp 
/F /.notdef /H 4{/.notdef}rp /M 19{/.notdef}rp /a /.notdef 
/c /d /e /f /g /h 3{/.notdef}rp /l 
/.notdef /n 2{/.notdef}rp /q /r /s /t /u 
3{/.notdef}rp /y /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
134.522 -1193.41 mo
(903.1 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
35.7624 -1237.74 mo
(Channel central frequency)
[7.91568 6.74536 6.09409 6.74533 6.69016 6.13824 3.06912 3.03601 6.13824 6.1051 6.74536 3.67624 
4.21735 6.13824 3.06912 3.03601 3.70935 4.19528 6.13824 6.7012 6.74536 6.09409 6.74533 6.09409 
0 ]xsh
42.8324 -1189.98 mo
72.0964 -1189.98 li
72.0964 -1202.12 li
42.8324 -1202.12 li
cp
1 gry
ef
0 gry
%ADOBeginSubsetFont: JAAAAA+Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKI+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF86F5F3A19921C3FE187E6183EB941A461BFDF48896B01C
539BA03B9A71268054FD539295016B775957F73BDDB654AA6712BF7E0C40F4AC
922FE0B288CD70E18C4E1C889841E3AE3271A7D86FE908FD4A3BC0FE2CC8F051
210EDBAF3FCCF42B66137993282D8903C68179D39C68CF2DDA978A8EFE5F0928
4C45B6203BE9537D93C8C7D651EB9110B223AA11E17568> |-
/p <1C60D8A8C9B7D8BE2E8563B32C07DCC3804272870E069E443B687857C9AC
B5C7CA1CF4F6A17C25172CC3E3E31B65AB87A5F695EADCB9429C1CB7981C750B
5DB31D41989E5AF25C22D1AF173045FD1E2E798D136DAECB194448D399145071
5E7374AE8B43D8B50AD9D750A67743A1F2A35DFF73BE71D039D15D8530023A7D
A074A0D1B66504E092406A88A86DBDD558> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKI+Arial-BoldMT /Encoding get
dup 79 /O put
dup 112 /p put
pop
%ADOEndSubsetFont
/PHWXKI+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 2{/.notdef}rp 
/F /.notdef /H 4{/.notdef}rp /M /.notdef /O 17{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
3{/.notdef}rp /l /.notdef /n /.notdef /p /q /r 
/s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
PHWXKI+Arial-BoldMT nf
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
24.8224 -1193.65 mo
(902.3 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-9.49762 -1169.68 mo
(Op. 1)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-9.61761 -1130.49 mo
(Op. 2)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-9.61761 -1089.23 mo
(Op. 3)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-139.288 -1144 mo
-83.6856 -1144 li
-83.6856 -1156.14 li
-139.288 -1156.14 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [18 0 0 -18 0 0 ]msf
301.012 -1215.95 mo
(...)
[5.00403 5.00397 0 ]xsh
301.782 -1085.27 mo
(...)
[5.00403 5.00397 0 ]xsh
%ADOBeginSubsetFont: YAAAAA+Calibri-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /YAAAAA+Calibri-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 183 /periodcentered put
def
/FontBBox {-519 -349 1263 1039} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/periodcentered <1C60D8A8C9B85EE3AA0F2865D2DC6A25EB1ED939B86A40D
C12020CC88C97C347A3E75917CC876240A3DEBEB20623F712E053AB9DFB2F616
1626B1FA85E2B60928B045896B12824> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHWXKK+Calibri-Bold /YAAAAA+Calibri-Bold findfont ct_VMDictPut
/PHWXKK+Calibri-Bold*1 
[183{/.notdef}rp /periodcentered 72{/.notdef}rp]
PHWXKK+Calibri-Bold nf
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
184.112 -1287.06 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
1.75 lw
2 lc
0 lj
2 ml
[5.25 5.25 ] 0 dsh
184.152 -1304.06 mo
181.812 -1304.02 179.812 -1303.1 179.222 -1301.81 cv
179.222 -1283.82 li
179.812 -1282.53 181.812 -1281.61 184.152 -1281.57 cv
@
198.562 -1303.93 mo
200.862 -1303.88 202.822 -1302.96 203.402 -1301.66 cv
203.402 -1283.51 li
202.822 -1282.2 200.862 -1281.28 198.562 -1281.24 cv
@
0 gry
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
178.732 -1212.28 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -1087.19 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -1129.89 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -1171.62 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
51.0324 -849.765 mo
(902.5 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
[] 0 dsh
36.8524 -974.745 mo
61.0324 -974.745 li
53.1224 -997.335 li
44.7524 -997.335 li
36.8524 -974.745 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
48.8424 -974.745 mo
73.0224 -974.745 li
65.1124 -997.335 li
56.7424 -997.335 li
48.8424 -974.745 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
62.6424 -974.745 mo
86.8124 -974.745 li
78.9124 -997.185 li
70.5424 -997.185 li
62.6424 -974.745 li
cp
@
1.75 lw
2 lc
[] 0 dsh
76.6424 -974.715 mo
100.822 -974.715 li
92.9124 -997.295 li
84.5524 -997.295 li
76.6424 -974.715 li
cp
@
0 lc
[7 3.5 ] 0 dsh
90.8824 -974.705 mo
115.062 -974.705 li
107.162 -997.295 li
98.7924 -997.295 li
90.8824 -974.705 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
105.492 -974.745 mo
129.672 -974.745 li
121.762 -997.185 li
113.392 -997.185 li
105.492 -974.745 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [12.024 0 0 -12.024 0 0 ]msf
-13.9176 -985.415 mo
(Master )
[9.95578 6.68533 6.74548 3.95581 6.60117 4.67743 0 ]xsh
1.75 lw
2 lc
[] 0 dsh
120.242 -974.715 mo
144.422 -974.715 li
136.522 -997.295 li
128.152 -997.295 li
120.242 -974.715 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
134.482 -974.705 mo
158.662 -974.705 li
150.762 -997.295 li
142.392 -997.295 li
134.482 -974.705 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
149.092 -974.745 mo
173.272 -974.745 li
165.362 -997.185 li
156.992 -997.185 li
149.092 -974.745 li
cp
@
1.25 lw
[5 2.5 ] 0 dsh
48.5424 -1001.21 mo
48.5424 -931.445 li
0 gry
@
61.7024 -1001.04 mo
61.7024 -887.435 li
@
PHWXKJ+Arial-BoldItalicMT*1 [9.96 0 0 -9.96 0 0 ]msf
188.672 -966.255 mo
(Freq.)
[6.10541 3.84464 5.62738 6.10541 0 ]xsh
1.75 lw
1 lc
1 lj
[] 0 dsh
183.572 -935.865 mo
33.8124 -935.865 li
@
182.772 -939.055 mo
189.152 -935.865 li
182.772 -932.675 li
182.772 -939.055 li
cp
ef
183.572 -898.215 mo
33.8124 -898.215 li
@
182.772 -901.405 mo
189.152 -898.215 li
182.772 -895.025 li
182.772 -901.405 li
cp
ef
183.572 -860.025 mo
33.8124 -860.025 li
@
182.772 -863.215 mo
189.152 -860.025 li
182.772 -856.835 li
182.772 -863.215 li
cp
ef
183.572 -974.655 mo
33.8124 -974.655 li
@
182.772 -977.845 mo
189.152 -974.655 li
182.772 -971.465 li
182.772 -977.845 li
cp
ef
.349 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
108.512 -851.015 mo
(Freq. guards)
[6.10541 3.84464 5.62738 6.10541 2.76889 2.76889 6.08548 6.12531 5.53778 3.82471 6.10541 0 
]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
110.262 -925.775 mo
(902.9 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
1 lw
133.642 -863.315 mo
145.362 -863.315 li
.349 gry
@
134.252 -860.875 mo
129.372 -863.315 li
134.252 -865.755 li
134.252 -860.875 li
cp
ef
144.752 -865.755 mo
149.632 -863.315 li
144.752 -860.875 li
144.752 -865.755 li
cp
ef
25.1224 -922.805 mo
80.7244 -922.805 li
80.7244 -934.941 li
25.1224 -934.941 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
[5 2.5 ] 0 dsh
76.0624 -1001.21 mo
76.0624 -860.655 li
0 gry
@
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
24.2424 -926.055 mo
(902.3 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
25.1224 -886.585 mo
80.7244 -886.585 li
80.7244 -897.073 li
25.1224 -897.073 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
38.0424 -888.115 mo
(902.4 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
161.132 -1000.88 mo
161.132 -860.315 li
@
118.032 -886.945 mo
173.634 -886.945 li
173.634 -896.412 li
118.032 -896.412 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
124.232 -888.065 mo
(903.0 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.29663 7.1911 0 ]xsh
1 lw
1 lc
1 lj
[] 0 dsh
90.9924 -863.315 mo
101.712 -863.315 li
.349 gry
@
91.6024 -860.875 mo
86.7224 -863.315 li
91.6024 -865.755 li
91.6024 -860.875 li
cp
ef
101.102 -865.755 mo
105.982 -863.315 li
101.102 -860.875 li
101.102 -865.755 li
cp
ef
140.702 -961.255 mo
179.095 -961.255 li
179.095 -973.391 li
140.702 -973.391 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
134.522 -964.655 mo
(903.1 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
35.7624 -1003.26 mo
(Channel central frequency)
[7.91568 6.74536 6.09409 6.74533 6.69016 6.13824 3.06912 3.03601 6.13824 6.1051 6.74536 3.67624 
4.21735 6.13824 3.06912 3.03601 3.70935 4.19528 6.13824 6.7012 6.74536 6.09409 6.74533 6.09409 
0 ]xsh
42.8324 -961.255 mo
72.0964 -961.255 li
72.0964 -973.391 li
42.8324 -973.391 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
24.8224 -964.915 mo
(902.3 MHz)
[5.53775 5.60748 5.53775 2.76889 5.60748 2.76886 8.2966 7.19113 0 ]xsh
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-9.49762 -944.055 mo
(Op. 1)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-9.61761 -907.915 mo
(Op. 2)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-9.61761 -870.285 mo
(Op. 3)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
178.732 -983.535 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -864.595 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -907.295 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -946.005 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
1.75 lw
2 lc
0 lj
76.6424 -935.965 mo
100.822 -935.965 li
92.9124 -958.555 li
84.5524 -958.555 li
76.6424 -935.965 li
cp
.0471 gry
@
120.242 -935.965 mo
144.422 -935.965 li
136.522 -958.555 li
128.152 -958.555 li
120.242 -935.965 li
cp
@
2 lw
0 lc
[40 8 16 8 ] 0 dsh
105.492 -860.095 mo
129.672 -860.095 li
121.762 -882.535 li
113.392 -882.535 li
105.492 -860.095 li
cp
@
149.092 -641.845 mo
173.272 -641.845 li
165.362 -664.285 li
156.992 -664.285 li
149.092 -641.845 li
cp
@
62.6424 -641.845 mo
86.8124 -641.845 li
78.9124 -664.285 li
70.5424 -664.285 li
62.6424 -641.845 li
cp
@
1.75 lw
[7 3.5 ] 0 dsh
48.8424 -679.765 mo
73.0224 -679.765 li
65.1124 -702.355 li
56.7424 -702.355 li
48.8424 -679.765 li
cp
@
90.8824 -679.735 mo
115.062 -679.735 li
107.162 -702.315 li
98.7924 -702.315 li
90.8824 -679.735 li
cp
@
134.482 -679.735 mo
158.662 -679.735 li
150.762 -702.315 li
142.392 -702.315 li
134.482 -679.735 li
cp
@
2 lc
[] 0 dsh
36.8524 -717.745 mo
61.0324 -717.745 li
53.1224 -740.335 li
44.7524 -740.335 li
36.8524 -717.745 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
48.6024 -631.195 mo
(902.5 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13824 3.06909 9.1521 7.91568 0 ]xsh
36.8524 -756.495 mo
61.0324 -756.495 li
53.1224 -779.075 li
44.7524 -779.075 li
36.8524 -756.495 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
48.8424 -756.485 mo
73.0224 -756.485 li
65.1124 -779.075 li
56.7424 -779.075 li
48.8424 -756.485 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
62.6424 -756.495 mo
86.8124 -756.495 li
78.9124 -778.935 li
70.5424 -778.935 li
62.6424 -756.495 li
cp
@
1.75 lw
2 lc
[] 0 dsh
76.6424 -756.455 mo
100.822 -756.455 li
92.9124 -779.035 li
84.5524 -779.035 li
76.6424 -756.455 li
cp
@
0 lc
[7 3.5 ] 0 dsh
90.8824 -756.455 mo
115.062 -756.455 li
107.162 -779.035 li
98.7924 -779.035 li
90.8824 -756.455 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
105.492 -756.495 mo
129.672 -756.495 li
121.762 -778.935 li
113.392 -778.935 li
105.492 -756.495 li
cp
@
gsave
59.3223 -757.585 mo
54.7924 -771.565 li
50.1524 -757.585 li
59.3223 -757.585 li
eclp
grestore
0 gry
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-15.4776 -767.135 mo
(Master )
[9.9599 6.70801 6.70801 3.99591 6.564 4.66809 0 ]xsh
1.75 lw
2 lc
[] 0 dsh
120.242 -756.455 mo
144.422 -756.455 li
136.522 -779.035 li
128.152 -779.035 li
120.242 -756.455 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
134.482 -756.455 mo
158.662 -756.455 li
150.762 -779.035 li
142.392 -779.035 li
134.482 -756.455 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
149.092 -756.495 mo
173.272 -756.495 li
165.362 -778.935 li
156.992 -778.935 li
149.092 -756.495 li
cp
@
1.25 lw
[5 2.5 ] 0 dsh
48.5424 -782.955 mo
48.5424 -713.195 li
0 gry
@
61.7024 -782.795 mo
61.7024 -669.175 li
@
PHWXKJ+Arial-BoldItalicMT*1 [9.96 0 0 -9.96 0 0 ]msf
188.912 -747.975 mo
(Freq.)
[6.10541 3.84464 5.62738 6.10541 0 ]xsh
1.75 lw
1 lc
1 lj
[] 0 dsh
183.572 -717.605 mo
33.8124 -717.605 li
@
182.772 -720.795 mo
189.152 -717.605 li
182.772 -714.415 li
182.772 -720.795 li
cp
ef
183.572 -679.955 mo
33.8124 -679.955 li
@
182.772 -683.145 mo
189.152 -679.955 li
182.772 -676.765 li
182.772 -683.145 li
cp
ef
183.572 -641.775 mo
33.8124 -641.775 li
@
182.772 -644.965 mo
189.152 -641.775 li
182.772 -638.585 li
182.772 -644.965 li
cp
ef
183.572 -756.405 mo
33.8124 -756.405 li
@
182.772 -759.595 mo
189.152 -756.405 li
182.772 -753.215 li
182.772 -759.595 li
cp
ef
.349 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
109.322 -631.605 mo
(Freq. guards)
[6.74536 4.29465 6.13821 6.7012 3.0029 3.11328 6.74533 6.69016 6.13824 4.18427 6.74533 0 
]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
107.832 -707.205 mo
(902.9 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
1 lw
133.642 -645.055 mo
145.362 -645.055 li
.349 gry
@
134.252 -642.615 mo
129.372 -645.055 li
134.252 -647.495 li
134.252 -642.615 li
cp
ef
144.752 -647.495 mo
149.632 -645.055 li
144.752 -642.615 li
144.752 -647.495 li
cp
ef
25.1224 -704.545 mo
80.7244 -704.545 li
80.7244 -716.681 li
25.1224 -716.681 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
[5 2.5 ] 0 dsh
76.0624 -782.955 mo
76.0624 -642.395 li
0 gry
@
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
22.0824 -707.495 mo
(902.3 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
25.1224 -668.325 mo
80.7244 -668.325 li
80.7244 -678.813 li
25.1224 -678.813 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
35.6224 -669.545 mo
(902.4 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
161.132 -782.625 mo
161.132 -642.065 li
@
118.032 -668.695 mo
173.634 -668.695 li
173.634 -678.162 li
118.032 -678.162 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
122.452 -669.495 mo
(903.0 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
1 lw
1 lc
1 lj
[] 0 dsh
90.9924 -645.055 mo
101.712 -645.055 li
.349 gry
@
91.6024 -642.615 mo
86.7224 -645.055 li
91.6024 -647.495 li
91.6024 -642.615 li
cp
ef
101.102 -647.495 mo
105.982 -645.055 li
101.102 -642.615 li
101.102 -647.495 li
cp
ef
140.702 -742.995 mo
179.095 -742.995 li
179.095 -755.131 li
140.702 -755.131 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
132.102 -746.085 mo
(903.1 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13824 3.06909 9.1521 7.91568 0 ]xsh
35.7624 -784.985 mo
(Channel central frequency)
[7.91568 6.74536 6.09409 6.74533 6.69016 6.13824 3.06912 3.03601 6.13824 6.1051 6.74536 3.67624 
4.21735 6.13824 3.06912 3.03601 3.70935 4.19528 6.13824 6.7012 6.74536 6.09409 6.74533 6.09409 
0 ]xsh
42.8324 -742.995 mo
72.0964 -742.995 li
72.0964 -755.131 li
42.8324 -755.131 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
22.3924 -746.345 mo
(902.3 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
PHWXKK+Calibri-Bold*1 [18.024 0 0 -18.024 0 0 ]msf
178.732 -765.285 mo
(\267\267\267)
[4.79825 4.79822 0 ]xsh
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
178.732 -646.335 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -689.015 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
PHWXKK+Calibri-Bold*1 [18.024 0 0 -18.024 0 0 ]msf
178.732 -727.745 mo
(\267\267\267)
[4.79825 4.79822 0 ]xsh
1.75 lw
2 lc
0 lj
76.6424 -717.715 mo
100.822 -717.715 li
92.9124 -740.295 li
84.5524 -740.295 li
76.6424 -717.715 li
cp
.0471 gry
@
120.242 -717.715 mo
144.422 -717.715 li
136.522 -740.295 li
128.152 -740.295 li
120.242 -717.715 li
cp
@
2 lw
0 lc
[40 8 16 8 ] 0 dsh
105.492 -641.845 mo
129.672 -641.845 li
121.762 -664.285 li
113.392 -664.285 li
105.492 -641.845 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-11.0376 -724.295 mo
(Op. 1)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-11.1776 -688.145 mo
(Op. 2)
[9.37201 7.33191 3.336 3.276 0 ]xsh
-11.1776 -650.515 mo
(Op. 3)
[9.37201 7.33191 3.336 3.276 0 ]xsh
149.092 -406.315 mo
173.272 -406.315 li
165.362 -428.755 li
156.992 -428.755 li
149.092 -406.315 li
cp
.0471 gry
@
62.6424 -406.315 mo
86.8124 -406.315 li
78.9124 -428.755 li
70.5424 -428.755 li
62.6424 -406.315 li
cp
@
1.75 lw
[7 3.5 ] 0 dsh
48.8424 -444.235 mo
73.0224 -444.235 li
65.1124 -466.825 li
56.7424 -466.825 li
48.8424 -444.235 li
cp
@
90.8824 -444.195 mo
115.062 -444.195 li
107.162 -466.785 li
98.7924 -466.785 li
90.8824 -444.195 li
cp
@
134.482 -444.195 mo
158.662 -444.195 li
150.762 -466.785 li
142.392 -466.785 li
134.482 -444.195 li
cp
@
2 lc
[] 0 dsh
36.8524 -482.215 mo
61.0324 -482.215 li
53.1224 -504.805 li
44.7524 -504.805 li
36.8524 -482.215 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
48.6024 -395.635 mo
(902.5 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13824 3.06909 9.1521 7.91568 0 ]xsh
36.8524 -520.955 mo
61.0324 -520.955 li
53.1224 -543.545 li
44.7524 -543.545 li
36.8524 -520.955 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
48.8424 -520.955 mo
73.0224 -520.955 li
65.1124 -543.545 li
56.7424 -543.545 li
48.8424 -520.955 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
62.6424 -520.965 mo
86.8124 -520.965 li
78.9124 -543.405 li
70.5424 -543.405 li
62.6424 -520.965 li
cp
@
1.75 lw
2 lc
[] 0 dsh
76.6424 -520.925 mo
100.822 -520.925 li
92.9124 -543.505 li
84.5524 -543.505 li
76.6424 -520.925 li
cp
@
0 lc
[7 3.5 ] 0 dsh
90.8824 -520.925 mo
115.062 -520.925 li
107.162 -543.505 li
98.7924 -543.505 li
90.8824 -520.925 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
105.492 -520.965 mo
129.672 -520.965 li
121.762 -543.405 li
113.392 -543.405 li
105.492 -520.965 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-15.4776 -531.575 mo
(Master )
[9.9599 6.70801 6.70801 3.99591 6.564 4.66809 0 ]xsh
1.75 lw
2 lc
[] 0 dsh
120.242 -520.925 mo
144.422 -520.925 li
136.522 -543.505 li
128.152 -543.505 li
120.242 -520.925 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
134.482 -520.925 mo
158.662 -520.925 li
150.762 -543.505 li
142.392 -543.505 li
134.482 -520.925 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
149.092 -520.965 mo
173.272 -520.965 li
165.362 -543.405 li
156.992 -543.405 li
149.092 -520.965 li
cp
@
1.25 lw
[5 2.5 ] 0 dsh
48.5424 -547.425 mo
48.5424 -477.665 li
0 gry
@
61.7024 -547.265 mo
61.7024 -433.645 li
@
PHWXKJ+Arial-BoldItalicMT*1 [9.96 0 0 -9.96 0 0 ]msf
188.912 -512.445 mo
(Freq.)
[6.10541 3.84464 5.62738 6.10541 0 ]xsh
1.75 lw
1 lc
1 lj
[] 0 dsh
183.572 -482.075 mo
33.8124 -482.075 li
@
182.772 -485.265 mo
189.152 -482.075 li
182.772 -478.885 li
182.772 -485.265 li
cp
ef
183.572 -444.425 mo
33.8124 -444.425 li
@
182.772 -447.615 mo
189.152 -444.425 li
182.772 -441.235 li
182.772 -447.615 li
cp
ef
183.572 -406.235 mo
33.8124 -406.235 li
@
182.772 -409.425 mo
189.152 -406.235 li
182.772 -403.045 li
182.772 -409.425 li
cp
ef
183.572 -520.865 mo
33.8124 -520.865 li
@
182.772 -524.055 mo
189.152 -520.865 li
182.772 -517.675 li
182.772 -524.055 li
cp
ef
.349 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
127.802 -396.185 mo
(Freq. )
[6.74536 4.29465 6.13824 6.70117 3.0029 0 ]xsh
122.912 -382.985 mo
(guards)
[6.74536 6.69016 6.13824 4.29462 6.74536 0 ]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
107.832 -471.645 mo
(902.9 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
1 lw
133.642 -409.525 mo
145.362 -409.525 li
.349 gry
@
134.252 -407.085 mo
129.372 -409.525 li
134.252 -411.965 li
134.252 -407.085 li
cp
ef
144.752 -411.965 mo
149.632 -409.525 li
144.752 -407.085 li
144.752 -411.965 li
cp
ef
25.1224 -469.015 mo
80.7244 -469.015 li
80.7244 -481.151 li
25.1224 -481.151 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
[5 2.5 ] 0 dsh
76.0624 -547.425 mo
76.0624 -406.865 li
0 gry
@
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
22.0824 -471.935 mo
(902.3 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
25.1224 -432.795 mo
80.7244 -432.795 li
80.7244 -443.283 li
25.1224 -443.283 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
35.6224 -434.015 mo
(902.4 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
161.132 -547.095 mo
161.132 -406.525 li
@
118.032 -433.165 mo
173.634 -433.165 li
173.634 -442.632 li
118.032 -442.632 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
122.452 -433.935 mo
(903.0 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
1 lw
1 lc
1 lj
[] 0 dsh
90.9924 -409.525 mo
101.712 -409.525 li
.349 gry
@
91.6024 -407.085 mo
86.7224 -409.525 li
91.6024 -411.965 li
91.6024 -407.085 li
cp
ef
101.102 -411.965 mo
105.982 -409.525 li
101.102 -407.085 li
101.102 -411.965 li
cp
ef
140.702 -507.465 mo
179.095 -507.465 li
179.095 -519.601 li
140.702 -519.601 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
132.102 -510.545 mo
(903.1 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13824 3.06909 9.1521 7.91568 0 ]xsh
46.9924 -328.745 mo
(Channel central frequency)
[7.91568 6.74536 6.09409 6.74533 6.69019 6.13821 3.06912 3.03601 6.13824 6.1051 6.74536 3.67624 
4.21738 6.13821 3.06912 3.03601 3.70935 4.19528 6.13824 6.7012 6.74536 6.09406 6.74536 6.09409 
0 ]xsh
42.8324 -507.465 mo
72.0964 -507.465 li
72.0964 -519.601 li
42.8324 -519.601 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
22.3924 -510.785 mo
(902.3 MHz)
[6.13824 6.1051 6.13824 2.9808 6.13821 3.06912 9.1521 7.91568 0 ]xsh
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
178.902 -528.545 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -410.775 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -453.475 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
178.732 -492.185 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
1.75 lw
2 lc
0 lj
76.6424 -482.185 mo
100.822 -482.185 li
92.9124 -504.765 li
84.5524 -504.765 li
76.6424 -482.185 li
cp
.0471 gry
@
120.242 -482.185 mo
144.422 -482.185 li
136.522 -504.765 li
128.152 -504.765 li
120.242 -482.185 li
cp
@
2 lw
0 lc
[40 8 16 8 ] 0 dsh
105.492 -406.315 mo
129.672 -406.315 li
121.762 -428.755 li
113.392 -428.755 li
105.492 -406.315 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
-11.0376 -488.755 mo
(Op. 1)
[9.336 7.33191 3.35999 3.24002 0 ]xsh
-11.1776 -452.615 mo
(Op. 2)
[9.37201 7.33191 3.336 3.276 0 ]xsh
-11.1776 -414.975 mo
(Op. 3)
[9.37201 7.33191 3.336 3.276 0 ]xsh
PHWXKI+Arial-BoldMT*1 [11.04 0 0 -11.04 0 0 ]msf
42.7724 -596.775 mo
(Central )
[7.91568 6.13824 6.7012 3.70935 4.19528 6.13824 3.06912 0 ]xsh
35.4324 -583.575 mo
(frequency)
[3.70935 4.19528 6.13824 6.7012 6.74536 6.09406 6.74536 6.09409 0 ]xsh
%ADOBeginSubsetFont: WAAAAA+Arial-BoldItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2025 Adobe System Incorporated. All rights reserved.
systemdict begin
PHWXKJ+Arial-BoldItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/C <1C60D8A8C9B6079F6DF55C6C4465B87F72D84972CD1B3A666165AE742079
35512D10551C18A1DAD76B761AFC3B5C2CB51CD28AFC00E3C792CC18F60966EE
9A6567BF86A48DA92AE51B885CFB9DB6B0AC1BAE196E3B189B40A0E9F1D041B8
79B6B59053797541C50A8624580D257759A91D6A920B8D35918D2D98AA482E7A
B5967E3BD2210EACB5C4799F8B9BAFFFC3FFB5193EFFBA> |-
/a <1C60D8A8C9B7EF322BB5AF982283DC1AEA12F6A10AC30FE9CDB838321106
1BC41C3B7CD12DD228DDBF2E3B2E0BFA9F64877E0109F56D0ECB1EFFFE5B32C6
8C20B7BAAE422965418F180136A2D908B917EE12DEBD7C82E2E0E2784E1D386B
81DF37A9BEED91D15B2D0ADFA24F7BC7E97BA3E888012F3E6987667F2615E2C5
A2CFF4FC3A437AE97800E77D6AF888B5960EA88A661E7CB9D59B9596C506EF09
B708EB388DA4BCB3215F06E7E811434CE137DCC5D9860AE266B7F599B24720CE
2BE282A4F9F554FBE47461EB1E7EEA504257719A83D569C4A0AE90ABE8EB8153
0D9E0BD76FBF125F> |-
/d <1C60D8A8C9B7D8BE18F849B536EFCA0F02FA3E76A4A36E3F76777EA56B16
1C32BD3650224D2C9259AB137A3C28285F8A9610171A5241A00CEFF78A51C9FA
2E4D589D8C9CF88EF8E317ADB723E8E9FAE4F993B2D89B336943A7DBBBEE7EEC
E669D1C221EAFAC164EB8F3C6FF7D3C43B06E75F14E8644FEF2361494818DE01
2A036AA7CCF2F7FB1D562B56C84E6A50CCEFC44A> |-
/h <1C60D8A8C9B7D8BE165125F8CF47BAB3135F506F29D19AE9740FD82C4A63
BF704A0E73E5DC932A54F48848A806EB064E7B0172B9F1CD8727168931C7651E
565573AA82098E9AB5909FD8A0D274D4A0B0766BBB5E4BD71DF4A36A02EC7C93
76D35DFBC0325B109850A64ACC26B477A230A28A172CD45F> |-
/i <1C60D8A8C9B854D0F404D3C2A96F9D07DC14A3CA0E60D784855FD9CE583E
A7EBA0E2E0029C64C1FD6689> |-
/l <1C60D8A8C9B854D0F4746D864E97BBAF494649CA2E6327CAD1AC> |-
/n <1C60D8A8C9B7D8BE543421B6181044C47731ABD2BAEF68FF0D0DB7753F6B
1FA10389D204682A5B33541322032BF9431D697179DE1F4251B2FB86F61AEF47
52502C86CF232A02EDF9E1B77E34F9009EF05DCA5484473BD82BE28C6E3EE509
9F9ED9BBCFB467B04ACA70EBBE95BE554659F1> |-
/o <1C60D8A8C9B7D8BE05815300F68C3B4866D275EC023778C68EAB1494CF6A
E7F9A0FB880DAF0D3BA610746ECDB19529B382632608F5409D3FCF599EB134F8
15EFC61AC49A05376F702A16F8C03B04D8726F28E546B110C97782D283D8BA51
FB04BEFACFBDFEB02213C408F21DB3309F901DFC641F8FE90304C3B31F88995E
35B9D5DC52418E3D39437476C3EEE761FFCD> |-
/s <1C60D8A8C9B7EF32280D0539CF84650B688614275E0871239403AA3580C8
BC998B3BB0BB07FE79912857CCA48316BF744DC415525F1B76947DD17390E009
6E4CC55FC34EFC0CF030F6F9DEDE6AFBF579BB88F7A5077767B6093A27EB2726
1895DFB13EE81E032AC3D37420D7F09263CB56E8CC834C458457216A61D6D4F9
4836889488A46572633D364DBD4335022A50869080C31EE96ECB3F4832976392
53ABDCE8D54A8DC09631E717BE75D2E35452741AFF83B124BA3C5A365A7867> |-
/v <1C60D8A8C9B7EF32248E548602F3D8FC9BC3C4522FB9EB4FFEC3CF89EB19
2A20F7242E9C325F5D4DC99A01DDD1B51F82F0484F7E87A0196C9E4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PHWXKJ+Arial-BoldItalicMT /Encoding get
dup 32 /space put
dup 67 /C put
dup 97 /a put
dup 100 /d put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 118 /v put
pop
%ADOEndSubsetFont
/PHWXKJ+Arial-BoldItalicMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 20{/.notdef}rp /C 2{/.notdef}rp /F 
26{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /.notdef /n /o /.notdef /q /r 
/s 2{/.notdef}rp /v 137{/.notdef}rp]
PHWXKJ+Arial-BoldItalicMT nf
PHWXKJ+Arial-BoldItalicMT*1 [11.04 0 0 -11.04 0 0 ]msf
166.732 -594.255 mo
(Channel )
[7.91568 6.74536 6.09409 6.74533 6.69019 6.13821 3.06912 0 ]xsh
167.642 -581.055 mo
(division)
[6.74536 2.96976 6.13824 3.06912 6.13821 3.01392 6.74536 0 ]xsh
1.75 lw
2 lc
[5.25 5.25 ] 0 dsh
351.442 -526.285 mo
349.112 -526.245 347.102 -525.325 346.522 -524.035 cv
346.522 -506.045 li
347.102 -504.755 349.112 -503.835 351.442 -503.795 cv
@
365.862 -526.155 mo
368.152 -526.115 370.122 -525.185 370.692 -523.885 cv
370.692 -505.735 li
370.122 -504.435 368.152 -503.505 365.862 -503.465 cv
@
0 gry
PHWXKJ+Arial-BoldItalicMT*1 [11.04 0 0 -11.04 0 0 ]msf
263.162 -623.105 mo
(Channel )
[7.97089 6.74536 6.13824 6.74536 6.74536 6.13818 3.06915 0 ]xsh
264.102 -609.905 mo
(division)
[6.74536 2.96973 6.13824 3.06915 6.13824 3.01392 6.74536 0 ]xsh
261.912 -564.645 mo
(Channel )
[7.91571 6.7453 6.09412 6.74536 6.69012 6.13824 3.06915 0 ]xsh
262.832 -551.445 mo
(division)
[6.74536 2.96973 6.13824 3.06915 6.13824 3.01392 6.74536 0 ]xsh
2 lw
0 lc
[40 8 16 8 ] 0 dsh
156.552 -75.9946 mo
180.732 -75.9946 li
172.822 -98.4346 li
164.452 -98.4346 li
156.552 -75.9946 li
cp
.0471 gry
@
70.1024 -75.9946 mo
94.2724 -75.9946 li
86.3724 -98.4346 li
78.0024 -98.4346 li
70.1024 -75.9946 li
cp
@
1.75 lw
[7 3.5 ] 0 dsh
56.3024 -113.225 mo
80.4824 -113.225 li
72.5724 -134.535 li
64.2024 -134.535 li
56.3024 -113.225 li
cp
@
98.3424 -113.195 mo
122.522 -113.195 li
114.622 -134.505 li
106.252 -134.505 li
98.3424 -113.195 li
cp
@
141.942 -113.195 mo
166.122 -113.195 li
158.222 -134.505 li
149.852 -134.505 li
141.942 -113.195 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
60.8924 -67.0046 mo
(902.5 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
2 lc
[] 0 dsh
44.3124 -180.385 mo
68.4924 -180.385 li
60.5824 -201.645 li
52.2124 -201.645 li
44.3124 -180.385 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
56.3024 -180.385 mo
80.4824 -180.385 li
72.5724 -201.645 li
64.2024 -201.645 li
56.3024 -180.385 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
70.1024 -180.385 mo
94.2724 -180.385 li
86.3724 -201.515 li
78.0024 -201.515 li
70.1024 -180.385 li
cp
@
1.75 lw
2 lc
[] 0 dsh
84.1024 -180.345 mo
108.282 -180.345 li
100.382 -201.615 li
92.0124 -201.615 li
84.1024 -180.345 li
cp
@
0 lc
[7 3.5 ] 0 dsh
98.3424 -180.345 mo
122.522 -180.345 li
114.622 -201.615 li
106.252 -201.615 li
98.3424 -180.345 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
112.952 -180.385 mo
137.132 -180.385 li
129.222 -201.515 li
120.852 -201.515 li
112.952 -180.385 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
-.857605 -188.895 mo
(Master )
[7.44293 5.03101 5.03101 2.99692 5.03101 3.50107 0 ]xsh
1.75 lw
2 lc
[] 0 dsh
127.702 -180.345 mo
151.882 -180.345 li
143.982 -201.615 li
135.612 -201.615 li
127.702 -180.345 li
cp
.0471 gry
@
0 lc
[7 3.5 ] 0 dsh
141.942 -180.345 mo
166.122 -180.345 li
158.222 -201.615 li
149.852 -201.615 li
141.942 -180.345 li
cp
@
2 lw
[40 8 16 8 ] 0 dsh
156.552 -180.385 mo
180.732 -180.385 li
172.822 -201.515 li
164.452 -201.515 li
156.552 -180.385 li
cp
@
1.25 lw
[5 2.5 ] 0 dsh
56.0024 -204.055 mo
56.0024 -135.785 li
0 gry
@
69.1624 -203.895 mo
69.1624 -102.465 li
@
1.75 lw
1 lc
1 lj
[] 0 dsh
191.032 -145.735 mo
41.2724 -145.735 li
@
190.232 -148.925 mo
196.612 -145.735 li
190.232 -142.545 li
190.232 -148.925 li
cp
ef
191.032 -113.415 mo
41.2724 -113.415 li
@
190.232 -116.605 mo
196.612 -113.415 li
190.232 -110.225 li
190.232 -116.605 li
cp
ef
191.032 -75.9246 mo
41.2724 -75.9246 li
@
190.232 -79.1146 mo
196.612 -75.9246 li
190.232 -72.7346 li
190.232 -79.1146 li
cp
ef
191.032 -180.295 mo
41.2724 -180.295 li
@
190.232 -183.485 mo
196.612 -180.295 li
190.232 -177.105 li
190.232 -183.485 li
cp
ef
.349 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
136.852 -66.9546 mo
(Freq. )
[5.49893 3.50107 5.03101 5.49893 2.42099 0 ]xsh
132.872 -56.1546 mo
(guards)
[5.49893 5.53494 4.92297 3.59106 5.39996 0 ]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
120.122 -137.135 mo
(902.9 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
1 lw
141.102 -79.2046 mo
152.822 -79.2046 li
.349 gry
@
141.712 -76.7646 mo
136.832 -79.2046 li
141.712 -81.6446 li
141.712 -76.7646 li
cp
ef
152.212 -81.6446 mo
157.092 -79.2046 li
152.212 -76.7646 li
152.212 -81.6446 li
cp
ef
32.5824 -135.455 mo
88.1844 -135.455 li
88.1844 -144.816 li
32.5824 -144.816 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
[5 2.5 ] 0 dsh
83.5224 -204.055 mo
83.5224 -76.1646 li
0 gry
@
32.5824 -101.785 mo
88.1844 -101.785 li
88.1844 -112.273 li
32.5824 -112.273 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
47.9124 -104.685 mo
(902.4 MHz)
[5.03101 4.923 5.03098 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
168.592 -203.725 mo
168.592 -76.7746 li
@
125.492 -102.155 mo
181.094 -102.155 li
181.094 -111.622 li
125.492 -111.622 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
134.742 -104.615 mo
(903.0 MHz)
[5.03101 4.923 5.03098 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
1 lw
1 lc
1 lj
[] 0 dsh
98.4524 -79.2046 mo
109.172 -79.2046 li
.349 gry
@
99.0624 -76.7646 mo
94.1824 -79.2046 li
99.0624 -81.6446 li
99.0624 -76.7646 li
cp
ef
108.562 -81.6446 mo
113.442 -79.2046 li
108.562 -76.7646 li
108.562 -81.6446 li
cp
ef
148.162 -166.895 mo
186.555 -166.895 li
186.555 -179.031 li
148.162 -179.031 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
144.392 -171.285 mo
(903.1 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
50.2924 -170.325 mo
79.5564 -170.325 li
79.5564 -179.032 li
50.2924 -179.032 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
38.4524 -171.475 mo
(902.3 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
1.75 lw
2 lc
0 lj
84.1024 -145.845 mo
108.282 -145.845 li
100.382 -168.425 li
92.0124 -168.425 li
84.1024 -145.845 li
cp
.0471 gry
@
127.702 -145.845 mo
151.882 -145.845 li
143.982 -168.425 li
135.612 -168.425 li
127.702 -145.845 li
cp
@
2 lw
0 lc
[40 8 16 8 ] 0 dsh
112.952 -75.9946 mo
137.132 -75.9946 li
129.222 -98.4346 li
120.852 -98.4346 li
112.952 -75.9946 li
cp
@
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
2.47238 -153.285 mo
(Op. 1)
[6.957 5.49893 2.52899 2.50201 0 ]xsh
2.35239 -122.465 mo
(Op. 2)
[6.957 5.49893 2.52899 2.50201 0 ]xsh
2.35239 -85.5346 mo
(Op. 3)
[6.957 5.49893 2.52899 2.50201 0 ]xsh
38.4524 -137.345 mo
(902.3 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
68.4922 57.5456 mo
44.3122 57.5456 li
52.2122 36.8756 li
60.5823 36.8756 li
68.4922 57.5456 li
/1 
[/DeviceCMYK] /CSA add_res
0 .0564706 .335686 0 cmyk
f
1.75 lw
2 lc
[] 0 dsh
44.3124 57.5454 mo
68.4924 57.5454 li
60.5824 36.8754 li
52.2124 36.8754 li
44.3124 57.5454 li
cp
.0471 gry
@
196.562 124.585 mo
172.392 124.585 li
180.292 102.146 li
188.662 102.146 li
196.562 124.585 li
.119492 0 .187313 0 cmyk
f
2 lw
0 lc
[40 8 16 8 ] 0 dsh
172.392 124.585 mo
196.562 124.585 li
188.662 102.145 li
180.292 102.145 li
172.392 124.585 li
cp
.0471 gry
@
99.6923 124.585 mo
75.5123 124.585 li
83.4123 102.146 li
91.7824 102.146 li
99.6923 124.585 li
.119492 0 .187313 0 cmyk
f
75.5124 124.585 mo
99.6924 124.585 li
91.7824 102.145 li
83.4124 102.145 li
75.5124 124.585 li
cp
.0471 gry
@
84.0125 90.1955 mo
59.8325 90.1955 li
67.7423 68.8853 li
76.1124 68.8853 li
84.0125 90.1955 li
.17298 .0204844 .0386928 0 cmyk
f
1.75 lw
[7 3.5 ] 0 dsh
59.8324 90.1954 mo
84.0124 90.1954 li
76.1124 68.8854 li
67.7424 68.8854 li
59.8324 90.1954 li
cp
.0471 gry
@
132.202 90.2356 mo
108.022 90.2356 li
115.933 68.9156 li
124.302 68.9156 li
132.202 90.2356 li
.17298 .0204844 .0386928 0 cmyk
f
108.022 90.2354 mo
132.202 90.2354 li
124.302 68.9154 li
115.932 68.9154 li
108.022 90.2354 li
cp
.0471 gry
@
180.393 90.2356 mo
156.212 90.2356 li
164.122 68.9156 li
172.492 68.9156 li
180.393 90.2356 li
.17298 .0204844 .0386928 0 cmyk
f
156.212 90.2354 mo
180.392 90.2354 li
172.492 68.9154 li
164.122 68.9154 li
156.212 90.2354 li
cp
.0471 gry
@
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
60.8924 133.585 mo
(902.5 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
59.394 23.1805 mo
45.5705 23.1805 li
52.8208 3.66052 li
59.9742 3.66052 li
63.3111 12.6336 li
61.944 16.3142 li
62.7643 16.6188 li
61.5456 19.9 li
60.7255 19.5954 li
59.394 23.1805 li
0 .0564706 .335686 0 cmyk
f
44.3122 24.0554 mo
44.3122 23.1805 li
67.2333 23.1805 li
59.9742 3.66052 li
52.8208 3.66052 li
45.1324 24.36 li
44.3122 24.0554 li
44.3122 23.1805 li
44.3122 24.0554 li
43.492 23.7508 li
51.6038 1.91042 li
61.1905 1.91042 li
69.7511 24.9303 li
43.054 24.9303 li
43.492 23.7508 li
44.3122 24.0554 li
.0471 gry
f
70.5025 24.0554 mo
69.4258 24.0554 li
65.1781 12.6332 li
66.0218 10.3614 li
65.2015 10.0568 li
66.4201 6.77585 li
67.2406 7.08056 li
68.5108 3.66052 li
70.6457 3.66052 li
70.6457 2.78529 li
74.1455 2.78529 li
74.1455 3.66052 li
75.6642 3.66052 li
77.1509 7.65809 li
77.971 7.35307 li
79.191 10.6336 li
78.3708 10.9386 li
79.4721 13.9001 li
77.6546 18.7528 li
76.718 18.4021 li
74.9285 23.1805 li
70.5025 23.1805 li
70.5025 24.0554 li
.17298 .0204844 .0386928 0 cmyk
f
67.2333 23.1805 mo
61.2608 23.1805 li
61.3444 22.9553 li
64.0122 22.9553 li
64.0122 21.7256 li
64.0122 22.9553 li
67.1496 22.9553 li
67.2333 23.1805 li
62.2409 20.1582 mo
61.5456 19.9 li
62.7643 16.6188 li
63.3445 16.8342 li
62.2409 20.1582 li
.173303 .04406 .179177 0 cmyk
f
69.4258 24.0554 mo
67.0023 24.0554 li
67.0023 23.1805 li
61.2608 23.1805 li
67.2333 23.1805 li
67.1496 22.9553 li
67.8425 22.9553 li
67.4429 21.7256 li
65.493 15.7254 li
64.8101 13.624 li
65.1781 12.6332 li
69.4258 24.0554 li
.172549 .0196078 .0392157 .4 cmyk
f
70.5025 23.1805 mo
77.5025 23.1805 li
77.5025 24.9303 li
70.5025 24.9303 li
70.5025 23.1805 li
81.0023 23.1805 mo
82.9233 23.1805 li
82.0306 20.78 li
83.6711 20.17 li
85.4412 24.9303 li
81.0023 24.9303 li
81.0023 23.1805 li
80.8107 17.4995 mo
78.3708 10.9386 li
80.0112 10.3286 li
82.4511 16.8896 li
80.8107 17.4995 li
77.1509 7.65809 mo
75.6642 3.66052 li
74.1455 3.66052 li
74.1455 1.91042 li
76.8805 1.91042 li
78.791 7.04813 li
77.1509 7.65809 li
70.6457 3.66052 mo
68.5108 3.66052 li
67.2406 7.08056 li
65.6002 6.47132 li
67.2938 1.91042 li
70.6457 1.91042 li
70.6457 3.66052 li
66.0218 10.3614 mo
63.5848 16.9235 li
61.944 16.3142 li
64.3813 9.75216 li
66.0218 10.3614 li
62.366 20.2047 mo
61.2608 23.1805 li
67.0023 23.1805 li
67.0023 24.9303 li
58.744 24.9303 li
60.7255 19.5954 li
62.366 20.2047 li
.0471 gry
f
91.3054 23.0453 mo
84.7402 23.0453 li
83.6711 20.17 li
83.641 20.1812 li
82.177 15.7254 li
82.0124 15.2244 li
82.0124 15.7098 li
82.0124 15.2244 li
80.8825 11.7854 li
80.7235 12.2441 li
80.4091 11.3984 li
80.4606 11.2609 li
81.397 11.6116 li
84.2755 3.92542 li
90.6816 3.92542 li
90.6816 2.92558 li
91.9522 2.92558 li
94.3097 9.22809 li
93.3733 9.57836 li
94.8462 13.5163 li
91.3054 23.0453 li
.119492 0 .187313 0 cmyk
f
82.8731 23.0453 mo
77.1148 23.0453 li
77.1485 22.9553 li
82.0124 22.9553 li
82.0124 21.7256 li
82.0124 22.9553 li
82.8396 22.9553 li
82.8731 23.0453 li
78.375 19.0225 mo
77.6546 18.7528 li
79.4721 13.9001 li
79.8229 14.8434 li
79.5174 15.7254 li
78.375 19.0225 li
.221453 .0118108 .209642 0 cmyk
f
84.7402 23.0453 mo
82.8731 23.0453 li
82.8396 22.9553 li
84.5525 22.9553 li
84.1484 21.7256 li
83.641 20.1812 li
83.6711 20.17 li
84.7402 23.0453 li
79.8229 14.8434 mo
79.4721 13.9001 li
80.4091 11.3984 li
80.7235 12.2441 li
79.8229 14.8434 li
.117647 0 .188235 .560784 cmyk
f
90.6816 3.92542 mo
84.2755 3.92542 li
81.397 11.6116 li
79.5241 10.9102 li
82.8891 1.92536 li
90.6816 1.92536 li
90.6816 3.92542 li
78.5913 19.1035 mo
77.1148 23.0453 li
98.4104 23.0453 li
93.3733 9.57836 li
95.2466 8.87766 li
101.294 25.0454 li
74.23 25.0454 li
76.718 18.4021 li
78.5913 19.1035 li
.0471 gry
f
107.274 23.2104 mo
100.608 23.2104 li
98.1612 16.6698 li
97.8377 15.7254 li
96.9047 13.001 li
100.361 3.7006 li
107.514 3.7006 li
111.021 13.1262 li
109.819 16.3619 li
110.639 16.6668 li
109.42 19.9475 li
108.6 19.6428 li
107.274 23.2104 li
0 .0564706 .335686 0 cmyk
f
93.1974 23.0453 mo
93.1723 23.0453 li
93.3483 22.5719 li
93.1974 23.0453 li
.0710496 .0558247 .449135 0 cmyk
f
100.608 23.2104 mo
93.111 23.2104 li
93.1723 23.0453 li
93.1974 23.0453 li
93.1623 23.1554 li
94.0124 23.1554 li
94.0124 23.0453 li
94.0124 23.1554 li
100.012 23.1554 li
100.012 22.0744 li
99.8927 21.7256 li
98.1612 16.6698 li
100.608 23.2104 li
100.012 23.1554 mo
100.382 23.1554 li
100.012 22.0744 li
100.012 23.1554 li
0 .054902 .337255 .572549 cmyk
f
91.8524 24.0853 mo
91.8524 23.2104 li
114.773 23.2104 li
107.514 3.7006 li
100.361 3.7006 li
92.6726 24.3902 li
91.8524 24.0853 li
91.8524 23.2104 li
91.8524 24.0853 li
91.0322 23.7806 li
99.1439 1.95051 li
108.73 1.95051 li
117.292 24.9605 li
90.5938 24.9605 li
91.0322 23.7806 li
91.8524 24.0853 li
.0471 gry
f
118.382 24.0853 mo
116.966 24.0853 li
115.069 18.988 li
114.01 15.7254 li
113.037 12.7259 li
113.897 10.4102 li
113.077 10.1054 li
114.296 6.82453 li
115.117 7.12938 li
116.391 3.7006 li
118.516 3.7006 li
118.516 3.70024 li
118.516 2.82537 li
122.016 2.82537 li
122.016 3.7006 li
123.544 3.7006 li
125.028 7.68907 li
125.849 7.38389 li
127.069 10.6643 li
126.249 10.9695 li
127.518 14.3802 li
125.883 18.7518 li
124.946 18.4014 li
123.147 23.2104 li
118.382 23.2104 li
118.382 24.0853 li
.17298 .0204844 .0386928 0 cmyk
f
114.773 23.2104 mo
109.141 23.2104 li
109.172 23.1255 li
112.012 23.1255 li
112.012 21.7256 li
112.012 23.1255 li
114.742 23.1255 li
114.773 23.2104 li
110.146 20.2172 mo
109.42 19.9475 li
110.639 16.6668 li
111.337 16.9262 li
110.146 20.2172 li
.173303 .04406 .179177 0 cmyk
f
116.966 24.0853 mo
114.882 24.0853 li
114.882 23.2104 li
109.141 23.2104 li
114.773 23.2104 li
114.742 23.1255 li
116.412 23.1255 li
115.958 21.7256 li
115.069 18.988 li
116.966 24.0853 li
.172549 .0196078 .0392157 .4 cmyk
f
118.382 23.2104 mo
125.382 23.2104 li
125.382 24.9605 li
118.382 24.9605 li
118.382 23.2104 li
128.882 23.2104 mo
130.803 23.2104 li
129.91 20.8103 li
131.55 20.1999 li
133.322 24.9605 li
128.882 24.9605 li
128.882 23.2104 li
128.69 17.5301 mo
126.249 10.9695 li
127.889 10.3592 li
130.33 16.9198 li
128.69 17.5301 li
125.028 7.68907 mo
123.544 3.7006 li
122.016 3.7006 li
122.016 1.95051 li
124.76 1.95051 li
126.669 7.07874 li
125.028 7.68907 li
118.516 3.7006 mo
116.391 3.7006 li
115.117 7.12938 li
113.476 6.51978 li
115.174 1.95051 li
118.516 1.95051 li
118.516 3.70024 li
118.516 3.7006 li
113.897 10.4102 mo
111.459 16.9715 li
109.819 16.3619 li
112.257 9.80063 li
113.897 10.4102 li
110.24 20.2524 mo
109.141 23.2104 li
114.882 23.2104 li
114.882 24.9605 li
106.624 24.9605 li
108.6 19.6428 li
110.24 20.2524 li
110.24 20.2524 li
.0471 gry
f
139.535 23.0453 mo
132.609 23.0453 li
131.55 20.1999 li
131.155 20.3471 li
130.012 17.0983 li
130.012 18.5754 li
130.012 17.0983 li
129.994 17.0449 li
130.33 16.9198 li
128.454 11.8777 li
128.685 11.259 li
129.622 11.6094 li
132.496 3.92542 li
138.905 3.92542 li
138.905 2.92558 li
140.172 2.92558 li
142.534 9.23058 li
141.597 9.58127 li
143.074 13.523 li
139.535 23.0453 li
.119492 0 .187313 0 cmyk
f
130.742 23.0453 mo
125.344 23.0453 li
125.378 22.9553 li
130.012 22.9553 li
130.012 21.7256 li
130.012 22.9553 li
130.708 22.9553 li
130.742 23.0453 li
126.662 19.0434 mo
125.883 18.7518 li
127.518 14.3802 li
127.884 15.3658 li
127.765 15.7254 li
126.662 19.0434 li
.221453 .0118108 .209642 0 cmyk
f
132.609 23.0453 mo
130.742 23.0453 li
130.708 22.9553 li
132.072 22.9553 li
131.64 21.7256 li
131.155 20.3471 li
131.55 20.1999 li
132.609 23.0453 li
129.994 17.0449 mo
129.53 15.7254 li
128.622 13.1456 li
127.884 15.3658 li
127.518 14.3802 li
128.454 11.8777 li
130.33 16.9198 li
129.994 17.0449 li
.117647 0 .188235 .560784 cmyk
f
138.905 3.92542 mo
132.496 3.92542 li
129.622 11.6094 li
127.749 10.9087 li
131.109 1.92536 li
138.905 1.92536 li
138.905 3.92542 li
126.819 19.1021 mo
125.344 23.0453 li
146.64 23.0453 li
141.597 9.58127 li
143.47 8.87985 li
149.525 25.0454 li
122.461 25.0454 li
124.946 18.4014 li
126.819 19.1021 li
.0471 gry
f
gsave
67.8425 22.9553 mo
64.6123 13.0155 li
61.3122 22.9553 li
67.8425 22.9553 li
eclp
gsave
58.0124 27.7254 mo
64.0122 27.7254 li
64.0122 21.7256 li
58.0124 21.7256 li
58.0124 27.7254 li
clp
64.0122 22.9553 mo
61.3444 22.9553 li
61.8011 21.7256 li
64.0122 21.7256 li
64.0122 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.375 0 0 1.875 -216.975 113.998 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 5 
/M[9 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.k=.]81Q2@.k<,@84Y6].k<,#84Z9%.k<,#.k<,#.k<,#.k<,#.f~>
<~&J5Te&J6KB.M37)&J5U).Ol#B&J5Te.Oln[&J5Te&J5Te&J5Te&J5Te&H~>
<~/hSb//hTU_7P6;G/hSbG7Rf!_/hSb/7Rfj"/hSb//hSb//hSb//hSb//c~>
<~!!!!!!!!$#!<<*"!!!!"!<E0#!!!!!!<E3$!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
61.3444 22.9553 mo
61.3122 22.9553 li
61.7205 21.7256 li
61.8011 21.7256 li
61.3444 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -216.975 113.998 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5~>
<~$O[=M$O[=M$O[=M$O[=~>
<~'bqGu'bqGu'bqGu'bqG~>
<~KS5#3KS5#3KS5#3KS5!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
64.0122 27.7254 mo
70.0124 27.7254 li
70.0124 21.7256 li
64.0122 21.7256 li
64.0122 27.7254 li
clp
67.1496 22.9553 mo
64.0122 22.9553 li
64.0122 21.7256 li
66.6922 21.7256 li
67.1496 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.75 0 0 1.875 -214.35 113.998 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 5 
/M[10 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@.k>OVDb*DL.k<,#Df9Pb81Q2@.k=.]88iE;81Q2@84Z9iDb*DL.k:~>
<~<E3$K.M37)&J8#C<@TI1&J5Te<E3$K.M37)&J6KB.TKIu.M37).OloJ<@TI1&J5~>
<~AnGXE7P6;G/hUaJAk#6B/hSb/AnGXE7P6;G/hTU_7V67%7P6;G7RfjZAk#6B/hR~>
<~Bk_8^!<<*"!!$_IB`S57!!!!!Bk_8^!<<*"!!!$#!GQ6K!<<*"!<E48B`S57!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.8425 22.9553 mo
67.1496 22.9553 li
66.6922 21.7256 li
67.4429 21.7256 li
67.8425 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 1.875 -211.725 113.998 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 5 
/M[5 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/-~>
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%K~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)Z~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2Z~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
58.0124 21.7256 mo
64.0122 21.7256 li
64.0122 15.7254 li
58.0124 15.7254 li
58.0124 21.7256 li
clp
64.0122 21.7256 mo
64.0122 21.7256 li
61.8011 21.7256 li
62.366 20.2047 li
62.2409 20.1582 li
63.3445 16.8342 li
63.5848 16.9235 li
64.0122 15.7725 li
64.0122 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -216.6 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.nE3%.k<,#.nE3%.k<,#.nE3%.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#81Q2@.k<,#
81Q2@.k<,#Db*DL.k<,#Db*DL.k<,#88iE;81Q2@88iE;81Q2@.nE3LDb*Di.nE3LDb*Di.k<,@88iEb
.k<,@88iEb.k<,@88iEb~>
<~&J5Te&Lo7[&J5Te&Lo7[&J5Te&Lo7[&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te.M37)&J5Te
.M37)&J5Te<@TI1&J5Te<@TI1&J5Te.TKIu.M37).TKIu.M37)&Lo81<@TIJ&Lo81<@TIJ&J5U).TKJK
&J5U).TKJK&J5U).TKJK~>
<~/hSb//k/<"/hSb//k/<"/hSb//k/<"/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/7P6;G/hSb/
7P6;G/hSb/Ak#6B/hSb/Ak#6B/hSb/7V67%7P6;G7V67%7P6;G/k/<BAk#6Z/k/<BAk#6Z/hSbG7V67E
/hSbG7V67E/hSbG7V67E~>
<~!!!!!!!**$!!!!!!!**$!!!!!!!**$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<<*"!!!!!
!<<*"!!!!!B`S57!!!!!B`S57!!!!!!GQ6K!<<*"!GQ6K!<<*"!!*+7B`S58!!*+7B`S58!!!!"!GQ7^
!!!!"!GQ7^!!!!"!GQ7^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
61.8011 21.7256 mo
61.7205 21.7256 li
62.2409 20.1582 li
62.366 20.2047 li
61.8011 21.7256 li
63.5848 16.9235 mo
63.3445 16.8342 li
63.7126 15.7254 li
64.0122 15.7254 li
64.0122 15.7725 li
63.5848 16.9235 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -216.6 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'JV<s'GM5q'JV<s'GM5q'JV<s'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0bb<9'GM5q
0bb<9'GM5q=>;NE'GM5q=>;NE'GM5q0j%O40bb<90j%O40bb<9'JV=E=>;Nb'JV=E=>;Nb'GM690j%O[
'GM690j%O['GM690j%O[~>
<~$O[=M$R?uC$O[=M$R?uC$O[=M$R?uC$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,RXtf$O[=M
,RXtf$O[=M:F%1n$O[=M:F%1n$O[=M,Yq2],RXtf,Yq2],RXtf$R?un:F%22$R?un:F%22$O[=f,Yq33
$O[=f,Yq33$O[=f,Yq33~>
<~'bqGu'eM!h'bqGu'eM!h'bqGu'eM!h'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/JT!8'bqGu
/JT!8'bqGu9e@q3'bqGu9e@q3'bqGu/PSqk/JT!8/PSqk/JT!8'eM"39e@qK'eM"39e@qK'bqH8/PSr6
'bqH8/PSr6'bqH8/PSr6~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS5#3KS5#3m=^.GKS5#3m=^.GKS5#3K^J/[KS5#3K^J/[KS5#3KS5$Gm=^.GKS5$Gm=^.GKS5#3K^J0o
KS5#3K^J0oKS5#3K^J0o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
64.0122 21.7256 mo
70.0124 21.7256 li
70.0124 15.7254 li
64.0122 15.7254 li
64.0122 21.7256 li
clp
66.6922 21.7256 mo
64.0122 21.7256 li
64.0122 15.7725 li
64.0297 15.7254 li
64.4609 15.7254 li
66.6922 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.375 0 0 6.75 -214.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 18 
/M[9 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@.rT?E84Y6].k>OVDb*DL.k<,@84[Z;84Y6]84Z9iDb*DL.k<,#84[Z;84Y6].nE3LDb*DL
.k<,#84[Z;.k<,#.nE3LD_!=g.k<,#84Y6].k<,#.nE2].k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#
.k<,#.k<,@84Y6].k<,#84Z9%.k<,#.nE3%.k<,#.k:~>
<~<E3$K.M37)&QMh2.Ol#B&J8#C<@TI1&J5U).OnFu.Ol#B.OloJ<@TI1&J5Te.OnFu.Ol#B&Lo81<@TI1
&J5Te.OnFu&J5Te&Lo81<=ofT&J5Te.Ol#B&J5Te&Lo7B&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te
&J5Te&J5U).Ol#B&J5Te.Oln[&J5Te&Lo7[&J5Te&J5~>
<~AnGXE7P6;G/nS^-7Rf!_/hUaJAk#6B/hSbG7Rh!%7Rf!_7RfjZAk#6B/hSb/7Rh!%7Rf!_/k/<BAk#6B
/hSb/7Rh!%/hSb//k/<BAhG\g/hSb/7Rf!_/hSb//k/;_/hSb//hSb//hSb//hSb//hSb//hSb//hSb/
/hSb//hSbG7Rf!_/hSb/7Rfj"/hSb//k/<"/hSb//hR~>
<~Bk_8^!<<*"!,6.]!<E0#!!$_IB`S57!!!!"!<HnK!<E0#!<E48B`S57!!!!!!<HnK!<E0#!!*+7B`S57
!!!!!!<HnK!!!!!!!*+7B`J,5!!!!!!<E0#!!!!!!!**#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!"!<E0#!!!!!!<E3$!!!!!!!**$!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.4429 21.7256 mo
66.6922 21.7256 li
64.4609 15.7254 li
65.493 15.7254 li
67.4429 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.75 0 0 6.75 -213.975 115.123 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 18 
/M[10 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df80;/1`>'/1b^X84Y9_/1`>'Df80;/1`>'/1a=_Df80;/1`>'84[Z;84Y9_/1`>'84[Z;84Y9_/1a=_
Df80;/1`>'/1a=_Df80;/1`>'84[Z;84Y9_/1`>'84[Z;/1`>'/1a=_Df70X/1`>'/1a=_/1`>'/1`>'
84Y9_/1`>'/1`>'/1`>'/1`>'/1a=_/1`>'/1`>'84Y9_/1`>'/1a=_/1`>'/1`>'~>
<~;Gnki%LrsY%LuB7-RTB6%LrsY;Gnki%LrsY%Lsj6;Gnki%LrsY-RVei-RTB6%LrsY-RVei-RTB6%Lsj6
;Gnki%LrsY%Lsj6;Gnki%LrsY-RVei-RTB6%LrsY-RVei%LrsY%Lsj6;Gmu7%LrsY%Lsj6%LrsY%LrsY
-RTB6%LrsY%LrsY%LrsY%LrsY%Lsj6%LrsY%LrsY-RTB6%LrsY%Lsj6%LrsY%LrsY~>
<~;Go8*)]K_8)]M[Q1,9df)]K_8;Go8*)]K_8)]LOf;Go8*)]K_81,;a*1,9df)]K_81,;a*1,9df)]LOf
;Go8*)]K_8)]LOf;Go8*)]K_81,;a*1,9df)]K_81,;a*)]K_8)]LOf;GnGQ)]K_8)]LOf)]K_8)]K_8
1,9df)]K_8)]K_8)]K_8)]K_8)]LOf)]K_8)]K_81,9df)]K_8)]LOf)]K_8)]K_8~>
<~TV+8(2`EZS2`ID&3&iiU2`EZSTV+8(2`EZS2`E]UTV+8(2`EZS3&mS(3&iiU2`EZS3&mS(3&iiU2`E]U
TV+8(2`EZS2`E]UTV+8(2`EZS3&mS(3&iiU2`EZS3&mS(2`EZS2`E]UTV+5&2`EZS2`E]U2`EZS2`EZS
3&iiU2`EZS2`EZS2`EZS2`EZS2`E]U2`EZS2`EZS3&iiU2`EZS2`E]U2`EZS2`EZS~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
64.0122 15.7725 mo
64.0122 15.7254 li
64.0297 15.7254 li
64.0122 15.7725 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -214.35 120.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BJ[-=BJ[-=9~>
<~:JXb^:JXb^:B~>
<~9he>V9he>V9`~>
<~mHs<.mHs<.m/~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
58.0124 15.7254 mo
64.0122 15.7254 li
64.0122 9.72556 li
58.0124 9.72556 li
58.0124 15.7254 li
clp
64.0122 15.7254 mo
64.0122 15.7254 li
63.7126 15.7254 li
64.0122 14.8231 li
64.0122 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.5 -214.725 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekCb=BJ[-=BJ[-~>
<~,U=X2:JXb^:JXb^~>
<~/M/PK9he>V9he>V~>
<~KS5$GmHs<.mHs<.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
64.0122 15.7254 mo
70.0124 15.7254 li
70.0124 9.72556 li
64.0122 9.72556 li
64.0122 15.7254 li
clp
64.4609 15.7254 mo
64.0297 15.7254 li
64.2451 15.1453 li
64.4609 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.5 -214.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,@84Z9B84Z9B~>
<~&J5U).Olnt.Olnt~>
<~/hSbG7Rfj:7Rfj:~>
<~!!!!"!<E3%!<E3%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
65.493 15.7254 mo
64.4609 15.7254 li
64.2451 15.1453 li
64.8101 13.624 li
65.493 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3 -213.975 121.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 8 
/M[5 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/4`;_/1a=_/1`>C81Z;C~>
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%OWV6%Lsj6%Lrsr-OpUr~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)_s/f)]LOf)]K_O1)h/O~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`NcU2`E]U2`EZT3&`cT~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
64.0297 15.7254 mo
64.0122 15.7254 li
64.0122 14.8231 li
64.6123 13.0155 li
64.8101 13.624 li
64.2451 15.1453 li
64.0297 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3.375 -214.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 9 
/M[4 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0ekBs0ekBs0ekBs~>
<~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,U=WC,U=WC,U=WC~>
<~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/M/Oh/M/Oh/M/Oh~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
84.5525 22.9553 mo
80.8825 11.7854 li
77.0124 22.9553 li
84.5525 22.9553 li
eclp
gsave
76.0122 27.7254 mo
82.0124 27.7254 li
82.0124 21.7256 li
76.0122 21.7256 li
76.0122 27.7254 li
clp
82.0124 22.9553 mo
77.1485 22.9553 li
77.6092 21.7256 li
82.0124 21.7256 li
82.0124 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.625 0 0 1.875 -201.225 113.998 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 5 
/M[15 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~:JW`$1,:U?1,:U?:JXb^:GO[\1,:U?1,:U\:JXb^1,:U?1,:U?1,;X$:NgnW:GO[\1,:U?1,:U?G'6YW
1,:U?1,:U?1,:T~>
<~-7002%1NaU%1NaU-71&d-4LCn%1NaU%1Nan-71&d%1NaU%1NaU%1OX2-;dVe-4LCn%1NaU%1NaU;,JYe
%1NaU%1NaU%1Na~>
<~8kLio1,:U?1,:U?8kM]J8hr.W1,:U?1,:UW8kM]J1,:U?1,:U?1,;Ho8nr*58hr.W1,:U?1,:U?C2-@5
1,:U?1,:U?1,:T~>
<~!<E0#!!!!!!!!!!!<E3%!<<*"!!!!!!!!!"!<E3%!!!!!!!!!!!!!$#!GQ6K!<<*"!!!!!!!!!!Bk[SK
!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
77.1485 22.9553 mo
77.0124 22.9553 li
77.4385 21.7256 li
77.6092 21.7256 li
77.1485 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -201.225 113.998 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej@s0bc>s'NeHl=BI9~>
<~,U<aC,RYkC$VsPD:JW5~>
<~/M.\h/JTih'hqCS9hd2~>
<~KS5#3KS5#3K^J/[mHoQ~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
82.0124 27.7254 mo
88.0122 27.7254 li
88.0122 21.7256 li
82.0124 21.7256 li
82.0124 27.7254 li
clp
82.8396 22.9553 mo
82.0124 22.9553 li
82.0124 21.7256 li
82.3823 21.7256 li
82.8396 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 1.875 -196.35 113.998 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%)G'8%)G'8%):JXc0:JXc0~>
<~;,L1;;,L1;;,L1;-71':-71':~>
<~C2.KUC2.KUC2.KU8kM]j8kM]j~>
<~Bk_8^Bk_8^Bk_8^!<E48!<E48~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
84.5525 22.9553 mo
82.8396 22.9553 li
82.3823 21.7256 li
84.1484 21.7256 li
84.5525 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 1.875 -195.975 113.998 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP9[t,U=W\BP9[t,U=W\BP9[t,U=W\5s]0t5sZbA5s]0t5sZbA~>
<~:JW5]$O[=M:JW5]$O[=M:JW5]$O[=M,U?/],U<a*,U?/],U<a*~>
<~B4j_)0/"t3B4j_)0/"t3B4j_)0/"t37n73)7n53c7n73)7n53c~>
<~[^Jq+9he>V[^Jq+9he>V[^Jq+9he>V:/87+:/4MX:/87+:/4MX~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
76.0122 21.7256 mo
82.0124 21.7256 li
82.0124 15.7254 li
76.0122 15.7254 li
76.0122 21.7256 li
clp
82.0124 18.2205 mo
81.6309 17.1946 li
82.0124 17.0527 li
82.0124 18.2205 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -196.725 118.498 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,U=W\,U=W~>
<~$O[=M$O[=M$O[=M$O[=~>
<~0/"t30/"t30/"t30/"s~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
82.0124 21.7256 mo
82.0124 21.7256 li
77.6092 21.7256 li
78.5913 19.1035 li
78.375 19.0225 li
79.5174 15.7254 li
80.1509 15.7254 li
80.8107 17.4995 li
81.6309 17.1946 li
82.0124 18.2205 li
82.0124 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 6.75 -200.85 115.123 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 18 
/M[14 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~:GO[\1,:U?1,:U\:JXbA1,:U?1,:U?1/C\A:GO[\1,:U?1,:U\:JZ.0:GO[\1,:U?1,:U?G#(mh1,:U?
1,:U?1,;XKG#(mh1,:U?1,:U?:NgnW:GO[\1,:U?1,:U\:NgnW:GO[\1,:U?1/C\hG#(mh1,:U?1,:U?
1/C\hG#(mh1,:U?1,:U\:NgnW:GO[\1,:U?1,:U\:NgnW:GO[\1,:U?1/C\hG#(mh1,:U?1,:U?1/C\h
G#(n01,:U?1,:U\:NgnW:JW`$1,:U?1,:U\:Ngo)1,:U?1,:U?1/C\hG'5Vr1,:U?1,:U\:Ngo)~>
<~-4LCn%1NaU%1Nan-71&K%1NaU%1NaU%43DK-4LCn%1NaU%1Nan-72S:-4LCn%1NaU%1NaU;'mV!%1NaU
%1NaU%1OX];'mV!%1NaU%1NaU-;dVe-4LCn%1NaU%1Nan-;dVe-4LCn%1NaU%43E!;'mV!%1NaU%1NaU
%43E!;'mV!%1NaU%1Nan-;dVe-4LCn%1NaU%1Nan-;dVe-4LCn%1NaU%43E!;'mV!%1NaU%1NaU%43E!
;'mV:%1NaU%1Nan-;dVe-7002%1NaU%1Nan-;dW;%1NaU%1NaU%43E!;,Ic3%1NaU%1Nan-;dW;~>
<~8hr.W1,:U?1,:UW8kM]21,:U?1,:U?1.k/28hr.W1,:U?1,:UW8kNhj8hr.W1,:U?1,:U?C._)R1,:U?
1,:U?1,;I:C._)R1,:U?1,:U?8nr*58hr.W1,:U?1,:UW8nr*58hr.W1,:U?1.k/RC._)R1,:U?1,:U?
1.k/RC._)R1,:U?1,:UW8nr*58hr.W1,:U?1,:UW8nr*58hr.W1,:U?1.k/RC._)R1,:U?1,:U?1.k/R
C._)j1,:U?1,:UW8nr*58kLio1,:U?1,:UW8nr*U1,:U?1,:U?1.k/RC2,LZ1,:U?1,:UW8nr*U~>
<~!<<*"!!!!!!!!!"!<E3$!!!!!!!!!!!!**$!<<*"!!!!!!!!!"!<Hm8!<<*"!!!!!!!!!!B`S57!!!!!
!!!!!!!!%6B`S57!!!!!!!!!!!GQ6K!<<*"!!!!!!!!!"!GQ6K!<<*"!!!!!!!*+7B`S57!!!!!!!!!!
!!*+7B`S57!!!!!!!!!"!GQ6K!<<*"!!!!!!!!!"!GQ6K!<<*"!!!!!!!*+7B`S57!!!!!!!!!!!!*+7
B`S58!!!!!!!!!"!GQ6K!<E0#!!!!!!!!!"!GQ7^!!!!!!!!!!!!*+7Bk[PI!!!!!!!!!"!GQ7^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
80.8107 17.4995 mo
80.1509 15.7254 li
82.0124 15.7254 li
82.0124 17.0527 li
81.6309 17.1946 li
80.8107 17.4995 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 2.625 -198.225 119.248 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 7 
/M[7 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\5s[d^,U=X$5sZbA,U>ZA5pR^$,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,Q~>
<~$O[=M,U=WC$O[=f,U<a*$O\4*,RXtf$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$N~>
<~0/"t37n6'&0/"tK7n53c0/#gc7kZMK0/"t30/"t30/"t30/"t30/"t30/"t30)~>
<~9he>V:/4PY9he>W:/4MX9heAX:/+GW9he>V9he>V9he>V9he>V9he>V9he>V9`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
77.6092 21.7256 mo
77.4385 21.7256 li
78.375 19.0225 li
78.5913 19.1035 li
77.6092 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3.375 -200.85 115.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 9 
/M[5 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM690bb<90ej@V'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'E~>
<~$O[=f,RXtf,U<a*$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$N~>
<~'bqH8/JT!8/M.\P'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'`~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
82.0124 21.7256 mo
88.0122 21.7256 li
88.0122 15.7254 li
82.0124 15.7254 li
82.0124 21.7256 li
clp
82.8508 20.475 mo
82.0124 18.2205 li
82.0124 17.0527 li
82.4511 16.8896 li
82.0182 15.7254 li
82.177 15.7254 li
83.641 20.1812 li
82.8508 20.475 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.25 0 0 5.625 -196.35 116.248 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 15 
/M[6 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'F5pU,WBL+p0BP;'F5pS`^6"jpt5s[eMBL*mh,XF_0,U=X$6"hMh,U=X$,U=W\,XE\$,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U<~>
<~:/4P0,R[@B:*_(m:/4P0,RYkC,Yh)[,U=X1:*^2T$R?um$O[=f,Ye^T$O[=f$O[=M$R?)f$O[=M$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$OZ~>
<~B4kjI7k\LfB1GHFB4kjI7k[A&7qZI)7n6'^B1FU.01SNF0/"tK7qXJ.0/"tK0/"t301RZK0/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/!~>
<~Bk_8^!<?hJB`S57Bk_8^!<<-$!GQ6K!<E48B`S26!!*+7!!!!"!GMN6!!!!"!!!!!!!*'"!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
82.3823 21.7256 mo
82.0124 21.7256 li
82.0124 18.2205 li
82.8508 20.475 li
82.0306 20.78 li
82.3823 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 4.125 -196.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 11 
/M[4 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?:JXbA:JXbA:JXbA~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU-71&K-71&K-71&K~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?8kM]28kM]28kM]2~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3$!<E3$!<E3$~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
84.1484 21.7256 mo
82.3823 21.7256 li
82.0306 20.78 li
82.8508 20.475 li
83.641 20.1812 li
84.1484 21.7256 li
82.0124 17.0527 mo
82.0124 15.7254 li
82.0182 15.7254 li
82.4511 16.8896 li
82.0124 17.0527 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -196.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'F5pR^$BP;'F5pR^$BP;'F5pR^$5s[eMBL+p05s[eMBL+p0,U=X$6"jpt,U=X$6"jpt,U=W\,XF_0
,U=W\,XF_0,U=W\,U=X$,U=W\,U=X$,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\5s[d^,U=W\
5s[d^,U=W\5s[d^,U=W\~>
<~:JXb3,RXtf:JXb3,RXtf:JXb3,RXtf,U=X2:F%1n,U=X2:F%1n$O[=f,Yq2]$O[=f,Yq2]$O[=M$R?un
$O[=M$R?un$O[=M$O[=f$O[=M$O[=f$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,U=WC$O[=M
,U=WC$O[=M,U=WC$O[=M~>
<~B4kjI7kZMKB4kjI7kZMKB4kjI7kZMK7n6'^B1GHF7n6'^B1GHF0/"tK7qZI)0/"tK7qZI)0/"t301SNF
0/"t301SNF0/"t30/"tK0/"t30/"tK0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t37n6'&0/"t3
7n6'&0/"t37n6'&0/"t3~>
<~[^NV>:/+GW[^NV>:/+GW[^NV>:/+GW:/4Qm[SBRl:/4Qm[SBRl9he>W::@T+9he>W::@T+9he>V9hnHl
9he>V9hnHl9he>V9he>W9he>V9he>W9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V:/4PY9he>V
:/4PY9he>V:/4PY9he>V~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
76.0122 15.7254 mo
82.0124 15.7254 li
82.0124 9.72556 li
76.0122 9.72556 li
76.0122 15.7254 li
clp
82.0124 15.7098 mo
80.7235 12.2441 li
80.8825 11.7854 li
82.0124 15.2244 li
82.0124 15.7098 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 4.875 -197.475 121.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 13 
/M[5 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U>ZA,U=X$5pR^$BP9[t6"jpt5s[e&BP;'F6"jqF5s]0t
BE~>
<~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O\4*$O[=f,RXtf:/3&[,Yh)[,U=W\:/4P0,Yh*0,U?,[
:&~>
<~0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/#gc0/"tK7kZMKB4j_)7qZI)7n6'>B4kjI7qZII7n73)
B)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!!!!"!<<*"Bk[SK!GQ6K!<E3%Bk_8^!GQ7^!<HnK
B`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
80.1509 15.7254 mo
79.5174 15.7254 li
79.8229 14.8434 li
80.1509 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 1.5 -198.975 121.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,;X$1,:U?1,:U?1,:U?~>
<~%1OX2%1NaU%1NaU%1NaU~>
<~1,;Ho1,:U?1,:U?1,:U?~>
<~!!!$#!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
82.0124 15.7254 mo
82.0124 15.7254 li
80.1509 15.7254 li
79.8229 14.8434 li
80.7235 12.2441 li
82.0124 15.7098 li
82.0124 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 4.125 -198.6 121.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 11 
/M[8 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5pR^$,U=W\5pR^$,U=W\BL+p0,U=W\BL+p0,U=W\6"jpt5pR^$6"jpt5pR^$,XF_0BL+pM,XF_0BL+pM
,U=X$6"jqF,U=X$6"jqF,U=X$6"jqF~>
<~,RXtf$O[=M,RXtf$O[=M:F%1n$O[=M:F%1n$O[=M,Yq2],RXtf,Yq2],RXtf$R?un:F%22$R?un:F%22
$O[=f,Yq33$O[=f,Yq33$O[=f,Yq33~>
<~7kZMK0/"t37kZMK0/"t3B1GHF0/"t3B1GHF0/"t37qZI)7kZMK7qZI)7kZMK01SNFB1GH^01SNFB1GH^
0/"tK7qZII0/"tK7qZII0/"tK7qZII~>
<~:/+GW9he>V:/+GW9he>V[SBRl9he>V[SBRl9he>V::@T+:/+GW::@T+:/+GW9hnHl[SBRm9hnHl[SBRm
9he>W::@U>9he>W::@U>9he>W::@U>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
82.0124 15.7254 mo
88.0122 15.7254 li
88.0122 9.72556 li
82.0124 9.72556 li
82.0124 15.7254 li
clp
82.177 15.7254 mo
82.0182 15.7254 li
82.0124 15.7098 li
82.0124 15.2244 li
82.177 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -196.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5s[e&5s[e&5l~>
<~,U=W\,U=W\,Q~>
<~7n6'>7n6'>7f~>
<~!<E3%!<E3%!<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
82.0182 15.7254 mo
82.0124 15.7254 li
82.0124 15.7098 li
82.0182 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -196.35 120.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5s[e&5sZP5*W~>
<~,U=W\,U<?i!!~>
<~7n6'>7n56e0E~>
<~:/4PZ:/6k2Nr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
100.382 23.1554 mo
96.6425 12.2354 li
93.1623 23.1554 li
100.382 23.1554 li
eclp
gsave
88.0122 27.7254 mo
94.0124 27.7254 li
94.0124 21.7256 li
88.0122 21.7256 li
88.0122 27.7254 li
clp
94.0124 23.0453 mo
93.1974 23.0453 li
93.3483 22.5719 li
93.6628 21.7256 li
94.0124 21.7256 li
94.0124 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 2.25 -185.1 113.623 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~*]c>C*]c>C*]c>C*Zc@D*Zc@D*Zc@D~>
<~'.b[c'.b[c'.b[c',)#m',)#m',)#m~>
<~;ep/a;ep/a;ep/a;c?Un;c?Un;c?Un~>
<~!!**$!!**$!!**$!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0124 23.1554 mo
93.1623 23.1554 li
93.1974 23.0453 li
94.0124 23.0453 li
94.0124 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 1.125 -185.1 113.248 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q~>
<~',)#m',)#m',)#m~>
<~6psF26psF26psF2~>
<~:JXb^:JXb^:JXb^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
93.3483 22.5719 mo
93.618 21.7256 li
93.6628 21.7256 li
93.3483 22.5719 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.5 -185.1 114.373 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'JV<V0ej@s0bb<9~>
<~$R?u*,U<aC,RXtf~>
<~'eM!P/M.\h/JT!8~>
<~KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
94.0124 27.7254 mo
100.012 27.7254 li
100.012 21.7256 li
94.0124 21.7256 li
94.0124 27.7254 li
clp
98.4104 23.0453 mo
94.0124 23.0453 li
94.0124 21.7256 li
97.9168 21.7256 li
98.4104 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 2.25 -184.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 6 
/M[14 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@U`e-3Z]=`*Zc@D*Zed"@QHOk*Zc@D*Zc@D@U`e-3Z]=`*Zc@D*Zd@'3auPZ3Z]=`*Zc@D3]]<2@QHOk
*Zc@D*Zc@D*]c>k@QHOk*Zc@D~>
<~<`W6P//&[1',)#m',+DI<\,d8',)#m',)#m<`W6P//&[1',)#m',)oJ/65e&//&[1',)#m/1`>Q<\,d8
',)#m',)#m'.b\8<\,d8',)#m~>
<~Mi3L/CK"/1;c?Un;cAU4Med*,;c?Un;c?UnMi3L/CK"/1;c?Un;c@IICQ"*dCK"/1;c?UnCMR^DMed*,
;c?Un;c?Un;ep0,Med*,;c?Un~>
<~Bk_8^!<<*"!!!!!!!$_IB`S57!!!!!!!!!!Bk_8^!<<*"!!!!!!!!$#!GQ6K!<<*"!!!!!!<E48B`S57
!!!!!!!!!!!!*+7B`S57!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
100.012 23.1554 mo
94.0124 23.1554 li
94.0124 23.0453 li
98.4104 23.0453 li
97.9168 21.7256 li
99.8927 21.7256 li
100.012 22.0744 li
100.012 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[6.75 0 0 2.25 -184.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 6 
/M[18 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BJZ[0bb<9'GM5q'GM690eld4=>;NE'GM5q'GM5q'JV<s=BJZ[0bb<9'GM5q'GM690ekC;0j%O40bb<9
'GM5q'GM5q0ekCb=>;NE'GM5q'GM5q'GM5q'JV=E=>;NE'GM5q'GM5q~>
<~<`W6P//&[1',)#m',)$1/1ah&<\,d8',)#m',)#m'.b[c<`W6P//&[1',)#m',)$1/1`>'/65e&//&[1
',)#m',)#m/1`>Q<\,d8',)#m',)#m',)#m'.b\8<\,d8',)#m',)#m~>
<~I!g<H>XUtJ6psF26psFJ>[2Z(HsBoE6psF26psF26sNu%I!g<H>XUtJ6psF26psFJ>[1N=>^Up(>XUtJ
6psF26psF2>[1N]HsBoE6psF26psF26psF26sNuEHsBoE6psF26psF2~>
<~\@B%F:esk_:JXb^:JXb_:f+[3\56!t:JXb^:JXb^:Jaka\@B%F:esk_:JXb^:JXb_:f'tb:q4#3:esk_
:JXb^:JXb^:f'uu\56!t:JXb^:JXb^:JXb^:Jalt\56!t:JXb^:JXb^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
100.012 27.7254 mo
106.012 27.7254 li
106.012 21.7256 li
100.012 21.7256 li
100.012 27.7254 li
clp
100.382 23.1554 mo
100.012 23.1554 li
100.012 22.0744 li
100.382 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -178.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BJ[-=BI:40ekC;'GM5~>
<~<`W7%<`Ub&/1`>'',)#~>
<~I!g<hI!f1(>[1N=6psE~>
<~\@B&Y\@>@3:f'tb:JXa~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
88.0122 21.7256 mo
94.0124 21.7256 li
94.0124 15.7254 li
88.0122 15.7254 li
88.0122 21.7256 li
clp
94.0124 21.7256 mo
94.0124 21.7256 li
93.6628 21.7256 li
94.0124 20.7846 li
94.0124 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -184.725 115.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~3]];_3]^_Z@U`eU@U`d~>
<~/1`>'/1ah&<`W7%<`W6~>
<~CMR^$CMSidMi3LOMi3J~>
<~!<E3%!<HnKBk_9qBk_8~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
93.6628 21.7256 mo
93.618 21.7256 li
94.0124 20.488 li
94.0124 20.7846 li
93.6628 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -184.725 115.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekC;0eld4=BJ[-=BJZ~>
<~,U=W\,U?/]:JXb^:JXa~>
<~/M/P+/M0[k9he>V9he=~>
<~KS5#3KS8a[mHs<.mHs9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
94.0124 21.7256 mo
100.012 21.7256 li
100.012 15.7254 li
94.0124 15.7254 li
94.0124 21.7256 li
clp
98.1612 16.6698 mo
97.8079 15.7254 li
97.8377 15.7254 li
98.1612 16.6698 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -180.6 119.998 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5~>
<~',)#m',)#m',)#m',)#~>
<~6UO4.6UO4.6UO4.6UO3~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.9168 21.7256 mo
94.0124 21.7256 li
94.0124 20.7846 li
95.7828 16.0202 li
97.9168 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.5 0 0 6.375 -184.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 17 
/M[12 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@U`e-3Z]=`*Zc@D@U`e-3Z]=`*Zc@D3]]<2@QHOk*Zc@D3]]<2@QHOk*Zc@D*Zc@`3auPZ3Z]=`*Zc@`
3auPZ3Z]=`*Zc@D*]c>k@QHOk*Zc@D*]c>k@QHOk*Zc@D*Zc@`3auPZ*Zc@D*Zc@`3auPZ*Zc@D*Zc@D
*]c>k*Zc@D*Zc@D*]c>k*Zc@D*Zc@D*Zc@`*Zc@D*Zc@D*Zc@`3]];C*Zc@D*Zc@D3]];C*Zc@D*Zc@D
3]];C*Zc@D*Zc@D~>
<~<`W6P//&[1',)#m<`W6P//&[1',)#m/1`>Q<\,d8',)#m/1`>Q<\,d8',)#m',)$1/65e&//&[1',)$1
/65e&//&[1',)#m'.b\8<\,d8',)#m'.b\8<\,d8',)#m',)$1/65e&',)#m',)$1/65e&',)#m',)#m
'.b\8',)#m',)#m'.b\8',)#m',)#m',)$1',)#m',)#m',)$1/1`=c',)#m',)#m/1`=c',)#m',)#m
/1`=c',)#m',)#m~>
<~Mi3L/CK"/1;c?UnMi3L/CK"/1;c?UnCMR^DMed*,;c?UnCMR^DMed*,;c?Un;c?V1CQ"*dCK"/1;c?V1
CQ"*dCK"/1;c?Un;ep0,Med*,;c?Un;ep0,Med*,;c?Un;c?V1CQ"*d;c?Un;c?V1CQ"*d;c?Un;c?Un
;ep0,;c?Un;c?Un;ep0,;c?Un;c?Un;c?V1;c?Un;c?Un;c?V1CMR]a;c?Un;c?UnCMR]a;c?Un;c?Un
CMR]a;c?Un;c?Un~>
<~Bk_8^!<<*"!!!!!Bk_8^!<<*"!!!!!!<E48B`S57!!!!!!<E48B`S57!!!!!!!!!"!GQ6K!<<*"!!!!"
!GQ6K!<<*"!!!!!!!*+7B`S57!!!!!!!*+7B`S57!!!!!!!!!"!GQ6K!!!!!!!!!"!GQ6K!!!!!!!!!!
!!*+7!!!!!!!!!!!!*+7!!!!!!!!!!!!!!"!!!!!!!!!!!!!!"!<E3$!!!!!!!!!!!<E3$!!!!!!!!!!
!<E3$!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
99.8927 21.7256 mo
97.9168 21.7256 li
95.7828 16.0202 li
95.8923 15.7254 li
97.8079 15.7254 li
98.1612 16.6698 li
99.8927 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.875 0 0 6.75 -182.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 13 
/H 18 
/M[13 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GN8V0bb<9'GM5q'GM690ej@V'GM5q'GM5q0ekC;0bb<9'GM5q'GM5q0ej@V'GM5q'GM5q
'NeHl0bb<9'GM5q'GOYO0ej@V'GM5q'GM690j%O40bb<9'GM5q0eld40ej@V'GM5q'GM690j%O40bb<9
'GM5q0eld40ej@V'GM5q'GM690j%O40bb<9'GM5q0eld40ej@V'GM5q'GM690j%O40ej@V'GM5q0eld4
0ekBs'GM5q'GM690j%O['GM5q'GM5q0eld4=;2G`'GM5q'JV=E=BG~>
<~',)#m',)#m',)oJ//&[1',)#m',)$1/1_GJ',)#m',)#m/1`>'//&[1',)#m',)#m/1_GJ',)#m',)#m
'38-b//&[1',)#m',+DI/1_GJ',)#m',)$1/65e&//&[1',)#m/1ah&/1_GJ',)#m',)$1/65e&//&[1
',)#m/1ah&/1_GJ',)#m',)$1/65e&//&[1',)#m/1ah&/1_GJ',)#m',)$1/65e&/1_GJ',)#m/1ah&
/1`=c',)#m',)$1/65eP',)#m',)#m/1ah&<YH,[',)#m'.b\8<`T~>
<~6psF26psF26pt9b>XUtJ6psF26psFJ>[0Zb6psF26psF2>[1N=>XUtJ6psF26psF2>[0Zb6psF26psF2
7!sAe>XUtJ6psF26puEM>[0Zb6psF26psFJ>^Up(>XUtJ6psF2>[2Z(>[0Zb6psF26psFJ>^Up(>XUtJ
6psF2>[2Z(>[0Zb6psF26psFJ>^Up(>XUtJ6psF2>[2Z(>[0Zb6psF26psFJ>^Up(>[0Zb6psF2>[2Z(
>[1N%6psF26psFJ>^UpH6psF26psF2>[2Z(Hpg@j6psF26sNuEI!b~>
<~:JXb^:JXb^:JXe`:esk_:JXb^:JXb_:f'q`:JXb^:JXb^:f'tb:esk_:JXb^:JXb^:f'q`:JXb^:JXb^
:Umo2:esk_:JXb^:J\L1:f'q`:JXb^:JXb_:q4#3:esk_:JXb^:f+[3:f'q`:JXb^:JXb_:q4#3:esk_
:JXb^:f+[3:f'q`:JXb^:JXb_:q4#3:esk_:JXb^:f+[3:f'q`:JXb^:JXb_:q4#3:f'q`:JXb^:f+[3
:f'ta:JXb^:JXb_:q4$F:JXb^:JXb^:f+[3\5,mr:JXb^:Jalt\@;~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0124 20.7846 mo
94.0124 20.488 li
95.5302 15.7254 li
95.8923 15.7254 li
95.7828 16.0202 li
94.0124 20.7846 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 5.625 -184.35 116.248 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 15 
/M[7 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BJZ[0bb=(=BI:4'GOYO=>;NE'JV<s=BI:40ekCb=>;NE'GN8V=BH7O'JV=E=;2G`'GN8V'GM5q'JV<V
'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'E~>
<~:JXb3,RXuU:JW5]$O]a+:F%1n$R?uC:JW5],U=X2:F%1n$O\4*:JV?+$R?un:C@O<$O\4*$O[=M$R?u*
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$N~>
<~9he>6/JT!p9hd2k'bsG;9e@q3'eM!h9hd2k/M/PK9e@q3'br;P9hc?;'eM"39beBX'br;P'bqGu'eM!P
'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'`~>
<~mHs:oKS5$GmHoR[KS8a[m=^.GKS5#3mHoR[KS5$Gm=^.GKS5#3mHoR[KS5$Gm=^.GKS5#3KS5#3KS5#3
KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
94.0124 15.7254 mo
100.012 15.7254 li
100.012 9.72556 li
94.0124 9.72556 li
94.0124 15.7254 li
clp
97.8377 15.7254 mo
97.8079 15.7254 li
96.847 13.1563 li
96.9047 13.001 li
97.8377 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3.375 -181.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 9 
/M[4 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0j%O40j%O4'JV=E'JV=E'GM69'GM69'GM5q'GM5q'GM5q~>
<~/65e&/65e&'.b\8'.b\8',)$1',)$1',)#m',)#m',)#m~>
<~>C1^$>C1^$6X*cA6X*cA6UO4F6UO4F6UO4.6UO4.6UO4.~>
<~!GQ6K!GQ6K!!*+7!!*+7!!!!"!!!!"!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
97.8079 15.7254 mo
95.8923 15.7254 li
96.847 13.1563 li
97.8079 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 3.375 -182.475 121.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 9 
/M[7 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GN8V=BI9l'JV=E=>:L('GN8V=;2G`'JV=E'GM5q'GN89'GM5q'JU:9'GM5q'GM5q'GM5q'GM5q'GM5
~>
<~',)oJ<`Uab'.b\8<\+mt',)oJ<YH,['.b\8',)#m',)o1',)#m'.ae1',)#m',)#m',)#m',)#m',)#
~>
<~6pt9bI!f0e6sNuEHsB'-6pt9bHpg@j6sNuE6psF26pt9J6psF26sN,J6psF26psF26psF26psF26psE
~>
<~:JXe`\@>@2:Jalt\55ss:JXe`\5,mr:Jalt:JXb^:JXe_:JXb^:Jah_:JXb^:JXb^:JXb^:JXb^:JXa
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
95.8923 15.7254 mo
95.5302 15.7254 li
96.6425 12.2354 li
96.9047 13.001 li
96.847 13.1563 li
95.8923 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.25 0 0 4.125 -182.85 121.123 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 11 
/M[6 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'JV=E=>:LE0j%O4'GM690j#,('JV=E'GM5q'JU:9'GM69'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'GL~>
<~$R?un:F$;n,Yq2]$O[=f,YndU$R?un$O[=M$R?)f$O[=f$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$OZ~>
<~'eM"39e@)3/PSqk'bqH8/PQrp'eM"3'bqGu'eL.8'bqH8'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
'bp~>
<~KS5$Gm=^.GK^J/[KS5#3K^FGGKS5$GKS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
116.412 23.1255 mo
112.952 12.4653 li
109.092 23.1255 li
116.412 23.1255 li
eclp
gsave
106.012 27.7254 mo
112.012 27.7254 li
112.012 21.7256 li
106.012 21.7256 li
106.012 27.7254 li
clp
112.012 23.1255 mo
109.172 23.1255 li
109.693 21.7256 li
112.012 21.7256 li
112.012 23.1255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.75 0 0 2.25 -169.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 6 
/M[10 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.k<,@84Y6].k<,#.nE3%.k<,#.k<,@84Y6].k<,#.k<,#.k<,#.k<,#.k=.@.k<,#.k<,#~>
<~&J5Te&J5U).Ol#B&J5Te&Lo7[&J5Te&J5U).Ol#B&J5Te&J5Te&J5Te&J5Te&J6K)&J5Te&J5Te~>
<~/hSb//hSbG7Rf!_/hSb//k/<"/hSb//hSbG7Rf!_/hSb//hSb//hSb//hSb//hTUG/hSb//hSb/~>
<~!!!!!!!!!"!<E0#!!!!!!!**$!!!!!!!!!"!<E0#!!!!!!!!!!!!!!!!!!!!!!!$"!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
109.172 23.1255 mo
109.092 23.1255 li
109.599 21.7256 li
109.693 21.7256 li
109.172 23.1255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 2.25 -169.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5q'GM5q0bb<9~>
<~$O[=M$O[=M$O[=M$O[=M$O[=M,RXtf~>
<~'bqGu'bqGu'bqGu'bqGu'bqGu/JT!8~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
112.012 27.7254 mo
118.012 27.7254 li
118.012 21.7256 li
112.012 21.7256 li
112.012 27.7254 li
clp
114.742 23.1255 mo
112.012 23.1255 li
112.012 21.7256 li
114.221 21.7256 li
114.742 23.1255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.375 0 0 2.25 -166.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@.rT?E84Y6].k>OVDb*DL.k<,@84[Z;84Y6]84Z9iDb*DL.k<,#84[Z;84W~>
<~<E3$K.M37)&QMh2.Ol#B&J8#C<@TI1&J5U).OnFu.Ol#B.OloJ<@TI1&J5Te.OnFu.Ok~>
<~AnGXE7P6;G/nS^-7Rf!_/hUaJAk#6B/hSbG7Rh!%7Rf!_7RfjZAk#6B/hSb/7Rh!%7Rd~>
<~Bk_8^!<<*"!,6.]!<E0#!!$_IB`S57!!!!"!<HnK!<E0#!<E48B`S57!!!!!!<HnK!<E~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
116.412 23.1255 mo
114.742 23.1255 li
114.221 21.7256 li
115.958 21.7256 li
116.412 23.1255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 2.25 -164.1 113.623 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'81Z;C/1`>'81Z;C/1`>'Db*DM/1`>'~>
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY-OpUr%LrsY-OpUr%LrsY;C<h%%LrsY~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_81)h/O)]K_81)h/O)]K_8;DL!H)]K_8~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS3&`cT2`EZS3&`cT2`EZSTK"ni2`EZS~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
106.012 21.7256 mo
112.012 21.7256 li
112.012 15.7254 li
106.012 15.7254 li
106.012 21.7256 li
clp
112.012 21.7256 mo
112.012 21.7256 li
109.693 21.7256 li
110.24 20.2524 li
110.24 20.2524 li
110.146 20.2172 li
111.337 16.9262 li
111.459 16.9715 li
111.922 15.7254 li
111.988 15.7254 li
112.012 15.7898 li
112.012 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -168.6 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.nE3%.k<,#.nE3%.k<,#.nE3%.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#81Q2@.k<,#
81Q2@.k<,#Db*DL.k<,#Db*DL.k<,#88iE;81Q2@88iE;81Q2@.nE3LDb*Di.nE3LDb*Di.k<,@88iEb
.k<,@88iEb.k<,@88iEb~>
<~&J5Te&Lo7[&J5Te&Lo7[&J5Te&Lo7[&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te.M37)&J5Te
.M37)&J5Te<@TI1&J5Te<@TI1&J5Te.TKIu.M37).TKIu.M37)&Lo81<@TIJ&Lo81<@TIJ&J5U).TKJK
&J5U).TKJK&J5U).TKJK~>
<~/hSb//k/<"/hSb//k/<"/hSb//k/<"/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/7P6;G/hSb/
7P6;G/hSb/Ak#6B/hSb/Ak#6B/hSb/7V67%7P6;G7V67%7P6;G/k/<BAk#6Z/k/<BAk#6Z/hSbG7V67E
/hSbG7V67E/hSbG7V67E~>
<~!!!!!!!**$!!!!!!!**$!!!!!!!**$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<<*"!!!!!
!<<*"!!!!!B`S57!!!!!B`S57!!!!!!GQ6K!<<*"!GQ6K!<<*"!!*+7B`S58!!*+7B`S58!!!!"!GQ7^
!!!!"!GQ7^!!!!"!GQ7^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.012 15.7898 mo
111.988 15.7254 li
112.012 15.7254 li
112.012 15.7898 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -166.35 120.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84Y:&81[;&/-~>
<~-RT'F-NtkF"T~>
<~1,91l1(#cl$3~>
<~3&kM03+b-0Ac~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
109.693 21.7256 mo
109.599 21.7256 li
110.146 20.2172 li
110.24 20.2524 li
110.24 20.2524 li
109.693 21.7256 li
111.459 16.9715 mo
111.337 16.9262 li
111.772 15.7254 li
111.922 15.7254 li
111.459 16.9715 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -168.6 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'JV<s'GM5q'JV<s'GM5q'JV<s'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0bb<9'GM5q
0bb<9'GM5q=>;NE'GM5q=>;NE'GM5q0j%O40bb<90j%O40bb<9'JV=E=>;Nb'JV=E=>;Nb'GM690j%O[
'GM690j%O['GM690j%O[~>
<~$O[=M$R?uC$O[=M$R?uC$O[=M$R?uC$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,RXtf$O[=M
,RXtf$O[=M:F%1n$O[=M:F%1n$O[=M,Yq2],RXtf,Yq2],RXtf$R?un:F%22$R?un:F%22$O[=f,Yq33
$O[=f,Yq33$O[=f,Yq33~>
<~'bqGu'eM!h'bqGu'eM!h'bqGu'eM!h'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/JT!8'bqGu
/JT!8'bqGu9e@q3'bqGu9e@q3'bqGu/PSqk/JT!8/PSqk/JT!8'eM"39e@qK'eM"39e@qK'bqH8/PSr6
'bqH8/PSr6'bqH8/PSr6~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS5#3KS5#3m=^.GKS5#3m=^.GKS5#3K^J/[KS5#3K^J/[KS5#3KS5$Gm=^.GKS5$Gm=^.GKS5#3K^J0o
KS5#3K^J0oKS5#3K^J0o~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
112.012 21.7256 mo
118.012 21.7256 li
118.012 15.7254 li
112.012 15.7254 li
112.012 21.7256 li
clp
115.069 18.988 mo
113.856 15.7254 li
114.01 15.7254 li
115.069 18.988 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 4.125 -164.475 117.748 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 11 
/M[5 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.k<,#.k<,#.k<,A8Ll;A8P(E_.rT>t8Ln^t8P(F(8T/N=8P*i=8Ll;_8T-+08P*h~>
<~%LrsY%LrsY%LrsY%Lrsr-OpUr-RTB6%T61P-Os$P-RTBO-W3hi-RVei-OpV6-W1Ea-RVd~>
<~)B'M4)B'M4)B'M4)B'ML1)_&L1,9ad)H'Hg1)a%g1,9b'1/_"*1,;a*1)_&d1/]#/1,;`~>
<~!!!!!!!!!!!!!!!!!!!"!<<*"!<E0#!,6-J!<?hJ!<E0$!GQ6K!<HnK!<<*#!GMN6!<Hm~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
114.221 21.7256 mo
112.012 21.7256 li
112.012 15.7898 li
114.221 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -166.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@Df9Pb81Q2@Df9Pb81Q2@84Z9iDb*DL84Z9iDb*DL.k<,@88iE;.k<,@88iE;.k<,#.nE3L
.k<,#.nE3L.k<,#.k<,@.k<,#.k<,@.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#84Z9%.k<,#
84Z9%.k<,#84Z9%.k<,#~>
<~<E3$K.M37)<E3$K.M37)<E3$K.M37).OloJ<@TI1.OloJ<@TI1&J5U).TKIu&J5U).TKIu&J5Te&Lo81
&J5Te&Lo81&J5Te&J5U)&J5Te&J5U)&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te.Oln[&J5Te
.Oln[&J5Te.Oln[&J5Te~>
<~AnGXE7P6;GAnGXE7P6;GAnGXE7P6;G7RfjZAk#6B7RfjZAk#6B/hSbG7V67%/hSbG7V67%/hSb//k/<B
/hSb//k/<B/hSb//hSbG/hSb//hSbG/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/7Rfj"/hSb/
7Rfj"/hSb/7Rfj"/hSb/~>
<~Bk_8^!<<*"Bk_8^!<<*"Bk_8^!<<*"!<E48B`S57!<E48B`S57!!!!"!GQ6K!!!!"!GQ6K!!!!!!!*+7
!!!!!!!*+7!!!!!!!!!"!!!!!!!!!"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3$!!!!!
!<E3$!!!!!!<E3$!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.958 21.7256 mo
114.221 21.7256 li
112.012 15.7898 li
112.012 15.7254 li
113.856 15.7254 li
115.069 18.988 li
115.958 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.875 0 0 6.75 -166.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 13 
/H 18 
/M[13 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Z;C/1`>'/8oHF84Y9_/1`>'/1b^XDb*DM/1`>'/1`>C84[Z;84Y9_/1`>'84Z9iDb*DM/1`>'
/1`>'84[Z;84Y9_/1`>'/4`<MDb*DM/1`>'/1`>'84[Z;84Y9_/1`>'/4`<MDb*DM/1`>'/1`>'84[Z;
84Y9_/1`>'/4`<MDb*DM/1`>'/1`>'84[Z;/1`>'/1`>'/4`<MD_*Fj/1`>'/1`>'84Y9_/1`>'/1`>'
/4`<&84Y9_/1`>'/1`>'84Z9&/1`>'/1`>'/4`<&/1`>'/1`>'/1^~>
<~;GpC?-OpUr%LrsY%T62&-RTB6%LrsY%LuB7;C<h%%LrsY%Lrsr-RVei-RTB6%LrsY-RU9>;C<h%%LrsY
%LrsY-RVei-RTB6%LrsY%OWW%;C<h%%LrsY%LrsY-RVei-RTB6%LrsY%OWW%;C<h%%LrsY%LrsY-RVei
-RTB6%LrsY%OWW%;C<h%%LrsY%LrsY-RVei%LrsY%LrsY%OWW%;@X0H%LrsY%LrsY-RTB6%LrsY%LrsY
%OWVO-RTB6%LrsY%LrsY-RU8O%LrsY%LrsY%OWVO%LrsY%LrsY%Lr~>
<~;GpCJ1)h/O)]K_8)cBR31,9df)]K_8)]M[Q;DL!H)]K_8)]K_O1,;a*1,9df)]K_81,:U_;DL!H)]K_8
)]K_81,;a*1,9df)]K_8)_s0H;DL!H)]K_8)]K_81,;a*1,9df)]K_8)_s0H;DL!H)]K_8)]K_81,;a*
1,9df)]K_8)_s0H;DL!H)]K_8)]K_81,;a*)]K_8)]K_8)_s0H;B$Po)]K_8)]K_81,9df)]K_8)]K_8
)_s0(1,9df)]K_8)]K_81,:U()]K_8)]K_8)_s0()]K_8)]K_8)]J~>
<~TV.r;3&`cT2`EZS2kZh:3&iiU2`EZS2`ID&TK"ni2`EZS2`EZT3&mS(3&iiU2`EZS3&imjTK"ni2`EZS
2`EZS3&mS(3&iiU2`EZS2`NdiTK"ni2`EZS2`EZS3&mS(3&iiU2`EZS2`NdiTK"ni2`EZS2`EZS3&mS(
3&iiU2`EZS2`NdiTK"ni2`EZS2`EZS3&mS(2`EZS2`EZS2`NdiTJneg2`EZS2`EZS3&iiU2`EZS2`EZS
2`NcV3&iiU2`EZS2`EZS3&ilV2`EZS2`EZS2`NcV2`EZS2`EZS2`C~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
106.012 15.7254 mo
112.012 15.7254 li
112.012 9.72556 li
106.012 9.72556 li
106.012 15.7254 li
clp
111.988 15.7254 mo
111.922 15.7254 li
111.955 15.6366 li
111.988 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -166.35 120.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df71FD_*Fj/-~>
<~<E0E,<=90B$N~>
<~AnEZ-AhG\g/c~>
<~Bk[Q]B`J,5!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.012 15.7254 mo
112.012 15.7254 li
111.988 15.7254 li
111.955 15.6366 li
112.012 15.4832 li
112.012 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -166.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df71FD_,gF/-~>
<~;GmZr;?]rr"T~>
<~;Gmj";@6<"$3~>
<~TV,niTOsjiAc~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
111.922 15.7254 mo
111.772 15.7254 li
112.012 15.0617 li
112.012 15.4832 li
111.955 15.6366 li
111.922 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.5 -166.725 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekCb=BJ[-=BJ[-~>
<~,U=X2:JXb^:JXb^~>
<~/M/PK9he>V9he>V~>
<~KS5$GmHs<.mHs<.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
112.012 15.7254 mo
118.012 15.7254 li
118.012 9.72556 li
112.012 9.72556 li
112.012 15.7254 li
clp
114.01 15.7254 mo
113.856 15.7254 li
112.888 13.1258 li
113.037 12.7259 li
114.01 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3.75 -165.6 121.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 10 
/M[5 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,A8Ll;A.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,A.k<,#8Ll;A.nM6A.k:~>
<~%Lrsr-OpUr%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%Lrsr%LrsY-OpUr%OV_r%Lr~>
<~)B'ML1)_&L)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'ML)B'M41)_&L)DW3L)B&~>
<~!!!!"!<<*"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!!!!!!<<*"!!*'"!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.856 15.7254 mo
112.012 15.7254 li
112.012 15.4832 li
112.888 13.1258 li
113.856 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 3.375 -166.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 9 
/M[7 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1a=_81Z;C/4`<&/1`>'84Z9&/1`=
~>
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%Lsj6-OpUr%OWVO%LrsY-RU8O%Lrs
~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]LOf1)h/O)_s0()]K_81,:U()]K^
~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`E]U3&`cT2`NcV2`EZS3&ilV2`EY
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
112.012 15.4832 mo
112.012 15.0617 li
112.952 12.4653 li
113.037 12.7259 li
112.888 13.1258 li
112.012 15.4832 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3.75 -166.35 121.498 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 10 
/M[5 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0ekBs'JV<s'GL~>
<~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,U=WC$R?uC$OZ~>
<~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/M/Oh'eM!h'bp~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
132.072 22.9553 mo
128.622 13.1456 li
125.362 22.9553 li
132.072 22.9553 li
eclp
gsave
124.012 27.7254 mo
130.012 27.7254 li
130.012 21.7256 li
124.012 21.7256 li
124.012 27.7254 li
clp
130.012 22.9553 mo
125.378 22.9553 li
125.838 21.7256 li
130.012 21.7256 li
130.012 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 1.875 -152.85 113.998 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 5 
/M[14 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~:GO[\1,:U?1,:U\:JXbA1,:U?1,:U?1/C\A:GO[\1,:U?1,:U\:JZ.0:GO[\1,:U?1,:U?G#(mh1,:U?
1,:U?1,8~>
<~-4LCn%1NaU%1Nan-71&K%1NaU%1NaU%43DK-4LCn%1NaU%1Nan-72S:-4LCn%1NaU%1NaU;'mV!%1NaU
%1NaU%1N~>
<~8hr.W1,:U?1,:UW8kM]21,:U?1,:U?1.k/28hr.W1,:U?1,:UW8kNhj8hr.W1,:U?1,:U?C._)R1,:U?
1,:U?1,8~>
<~!<<*"!!!!!!!!!"!<E3$!!!!!!!!!!!!**$!<<*"!!!!!!!!!"!<Hm8!<<*"!!!!!!!!!!B`S57!!!!!
!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
125.378 22.9553 mo
125.362 22.9553 li
125.771 21.7256 li
125.838 21.7256 li
125.378 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.875 -152.85 113.998 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0bb<V'GN89'Nd(E=>;N~>
<~,RXu*$O\3f$Vr#n:F%1~>
<~/JT!P'br;8'hp839e@p~>
<~KS5#3KS5#3K^FGGm=^,~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
130.012 27.7254 mo
136.012 27.7254 li
136.012 21.7256 li
130.012 21.7256 li
130.012 27.7254 li
clp
130.708 22.9553 mo
130.012 22.9553 li
130.012 21.7256 li
130.251 21.7256 li
130.708 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 1.875 -148.35 113.998 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%)G'8%)G'8%):JXc0:JXc0~>
<~;,L1;;,L1;;,L1;-71':-71':~>
<~C2.KUC2.KUC2.KU8kM]j8kM]j~>
<~Bk_8^Bk_8^Bk_8^!<E48!<E48~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
132.072 22.9553 mo
130.708 22.9553 li
130.251 21.7256 li
131.64 21.7256 li
132.072 22.9553 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.25 0 0 1.875 -147.975 113.998 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP9[t,U@&:5sZbABP9[t,U>ZABP9[t5s]0t5sY~>
<~:JW5]$O]a+,U<a*:JW5]$O\4*:JW5],U?/],U<~>
<~B4j_)0/$sN7n53cB4j_)0/#gcB4j_)7n73)7n3~>
<~[^Jq+9hi():/4MX[^Jq+9heAX[^Jq+:/87+:/1~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
124.012 21.7256 mo
130.012 21.7256 li
130.012 15.7254 li
124.012 15.7254 li
124.012 21.7256 li
clp
130.012 18.5754 mo
129.51 17.2249 li
129.994 17.0449 li
130.012 17.0983 li
130.012 18.5754 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 2.25 -148.725 118.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,U=W\,U=W\,U<~>
<~$O[=M$O[=M$O[=M$O[=M$OZ~>
<~0/"t30/"t30/"t30/"t30/!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
130.012 21.7256 mo
130.012 21.7256 li
125.838 21.7256 li
126.819 19.1021 li
126.662 19.0434 li
127.765 15.7254 li
128.018 15.7254 li
128.69 17.5301 li
129.51 17.2249 li
130.012 18.5754 li
130.012 20.7723 li
129.91 20.8103 li
130.012 21.0846 li
130.012 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.875 0 0 6.75 -152.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 13 
/H 18 
/M[13 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1,;X$:GO[\1,:U?1,:U\:JW`$1,:U?1,:U?:JXb^:GO[\1,:U?1,:U?:JW`$1,:U?1,:U?
13Rh::GO[\1,:U?1,=#r:JW`$1,:U?1,:U\:NgnW:GO[\1,:U?:JZ.W:JW`$1,:U?1,:U\:NgnW:GO[\
1,:U?:JZ.W:JW`$1,:U?1,:U\:NgnW:GO[\1,:U?:JZ.W:JW`$1,:U?1,:U\:NgnW:JW`$1,:U?:JZ.W
:JXbA1,:U?1,:U\:Ngo)1,:U?1,:U?:JZ.WFttg.1,:U?1/C\hG'3~>
<~%1NaU%1NaU%1OX2-4LCn%1NaU%1Nan-7002%1NaU%1NaU-71&d-4LCn%1NaU%1NaU-7002%1NaU%1NaU
%8ftL-4LCn%1NaU%1Q03-7002%1NaU%1Nan-;dVe-4LCn%1NaU-72Se-7002%1NaU%1Nan-;dVe-4LCn
%1NaU-72Se-7002%1NaU%1Nan-;dVe-4LCn%1NaU-72Se-7002%1NaU%1Nan-;dVe-7002%1NaU-72Se
-71&K%1NaU%1Nan-;dW;%1NaU%1NaU-72Se;%3sD%1NaU%43E!;,I~>
<~1,:U?1,:U?1,;Ho8hr.W1,:U?1,:UW8kLio1,:U?1,:U?8kM]J8hr.W1,:U?1,:U?8kLio1,:U?1,:U?
12:Pr8hr.W1,:U?1,<TZ8kLio1,:U?1,:UW8nr*58hr.W1,:U?8kNi58kLio1,:U?1,:UW8nr*58hr.W
1,:U?8kNi58kLio1,:U?1,:UW8nr*58hr.W1,:U?8kNi58kLio1,:U?1,:UW8nr*58kLio1,:U?8kNi5
8kM]21,:U?1,:UW8nr*U1,:U?1,:U?8kNi5C,.P"1,:U?1.k/RC2*~>
<~!!!!!!!!!!!!!$#!<<*"!!!!!!!!!"!<E0#!!!!!!!!!!!<E3%!<<*"!!!!!!!!!!!<E0#!!!!!!!!!!
!,6-J!<<*"!!!!!!!$_I!<E0#!!!!!!!!!"!GQ6K!<<*"!!!!!!<HnK!<E0#!!!!!!!!!"!GQ6K!<<*"
!!!!!!<HnK!<E0#!!!!!!!!!"!GQ6K!<<*"!!!!!!<HnK!<E0#!!!!!!!!!"!GQ6K!<E0#!!!!!!<HnK
!<E3$!!!!!!!!!"!GQ7^!!!!!!!!!!!<HnKB`J,5!!!!!!!*+7Bk[~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
130.012 21.0846 mo
129.91 20.8103 li
130.012 20.7723 li
130.012 21.0846 li
128.69 17.5301 mo
128.018 15.7254 li
129.53 15.7254 li
129.994 17.0449 li
129.51 17.2249 li
128.69 17.5301 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 6 -150.225 115.873 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 16 
/M[7 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\5s[d^,U=X$5sZbA,U>ZA5pR^$,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=X$
5pR^$,U>ZA,U=W\,\UjW5pR^$BP9[t,U=X$6"jpt5s[e&BP9[t5pR^A6"jqF~>
<~$O[=M,U=WC$O[=f,U<a*$O\4*,RXtf$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=f
,RXtf$O\4*$O[=M$VsPD,RXtf:JW5]$O[=f,Yq2],U=W\:JW5],RXu*,Yq33~>
<~0/"t37n6'&0/"tK7n53c0/#gc7kZMK0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"tK
7kZMK0/#gc0/"t305"of7kZMKB4j_)0/"tK7qZI)7n6'>B4j_)7kZMc7qZII~>
<~9he>V:/4PY9he>W:/4MX9heAX:/+GW9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>W
:/+GW9heAX9he>V9t%K*:/+GW[^Jq+9he>W::@T+:/4PZ[^Jq+:/+GX::@U>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
125.838 21.7256 mo
125.771 21.7256 li
126.662 19.0434 li
126.819 19.1021 li
125.838 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3.375 -152.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 9 
/M[4 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GN8V'GN8V'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q~>
<~$O\4*$O\4*$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M~>
<~'br;P'br;P'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
130.012 21.7256 mo
136.012 21.7256 li
136.012 15.7254 li
130.012 15.7254 li
130.012 21.7256 li
clp
130.73 20.5051 mo
130.012 18.5754 li
130.012 17.0983 li
131.155 20.3471 li
130.73 20.5051 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 4.125 -148.35 116.248 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 11 
/M[5 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5s[eMBI"iK5sZbA,XF^A,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W~>
<~,U=X1:(%F;,U<a*$R?u*$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=~>
<~7n6'^B.knk7n53c01SMc0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"s~>
<~!<E48B`J,5!<E0#!!**#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
130.251 21.7256 mo
130.012 21.7256 li
130.012 21.0846 li
130.251 21.7256 li
130.012 20.7723 mo
130.012 18.5754 li
130.73 20.5051 li
130.012 20.7723 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3.75 -148.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 10 
/M[4 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?:JXbA:JXbA:JXbA~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU-71&K-71&K-71&K~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?8kM]28kM]28kM]2~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3$!<E3$!<E3$~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
131.64 21.7256 mo
130.251 21.7256 li
130.012 21.0846 li
130.012 20.7723 li
130.73 20.5051 li
131.155 20.3471 li
131.64 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.25 0 0 2.25 -148.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,U=W\,U=W\,U>ZA5pR^$5s[d^,U>ZA5pR^$~>
<~$O[=M$O[=M$O[=M$O[=M$O\4*,RXtf,U=WC$O\4*,RXtf~>
<~0/"t30/"t30/"t30/"t30/#gc7kZMK7n6'&0/#gc7kZMK~>
<~9he>V9he>V9he>V9he>V9heAX:/+GW:/4PY9heAX:/+GW~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
124.012 15.7254 mo
130.012 15.7254 li
130.012 9.72556 li
124.012 9.72556 li
124.012 15.7254 li
clp
128.018 15.7254 mo
127.765 15.7254 li
127.884 15.3658 li
128.018 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -150.6 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1&~>
<~%1NaU%1NaU%0~>
<~1,:U?1,:U?1&~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
129.53 15.7254 mo
128.018 15.7254 li
127.884 15.3658 li
128.622 13.1456 li
129.53 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 3.375 -150.6 121.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 9 
/M[7 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BL+p0,U=XK5sZbA,U>ZhBL+p0,XH*W5sZbA,XF_0BL+p05s]0t5sZbA,XF_0BI"iK5s]0t,U=X$6"jp
~>
<~:F%1n$O[><,U<a*$O\4U:F%1n$RAMD,U<a*$R?un:F%1n,U?/],U<a*$R?un:C@O<,U?/]$O[=f,Yq2
~>
<~B1GHF0/"tk7n53c0/#h.B1GHF01TYf7n53c01SNFB1GHF7n73)7n53c01SNFB.knk7n73)0/"tK7qZH
~>
<~[SBRl9he?j:/4MX9heBk[SBRl9hr.*:/4MX9hnHl[SBRl:/87+:/4MX9hnHl[S9Ij:/87+9he>W::@S
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
1.25238 15.8454 mo
(Master )
[8.2966 5.61743 5.53778 3.31659 5.53775 3.95419 0 ]xsh
155.094 23.2104 mo
148.837 23.2104 li
145.074 13.1629 li
148.59 3.7006 li
155.744 3.7006 li
159.044 12.5809 li
157.634 16.3747 li
158.454 16.6796 li
157.235 19.9603 li
156.415 19.6555 li
155.094 23.2104 li
0 .0564706 .335686 0 cmyk
f
148.837 23.2104 mo
148.013 23.2104 li
148.012 23.2078 li
148.012 23.2104 li
148.012 23.2078 li
147.5 21.7256 li
145.427 15.7254 li
144.798 13.906 li
145.074 13.1629 li
148.837 23.2104 li
0 .054902 .337255 .572549 cmyk
f
141.552 23.0453 mo
141.402 23.0453 li
142.487 20.1257 li
142.012 21.6086 li
142.012 21.7256 li
142.012 21.6086 li
141.975 21.7256 li
141.552 23.0453 li
.0710496 .0558247 .449135 0 cmyk
f
141.5 23.2104 mo
141.341 23.2104 li
141.402 23.0453 li
141.552 23.0453 li
141.5 23.2104 li
0 .054902 .337255 .572549 cmyk
f
140.082 24.0853 mo
140.082 23.2104 li
162.994 23.2104 li
155.744 3.7006 li
148.59 3.7006 li
140.902 24.3902 li
140.082 24.0853 li
140.082 23.2104 li
140.082 24.0853 li
139.262 23.7806 li
147.374 1.95051 li
156.961 1.95051 li
165.511 24.9605 li
138.824 24.9605 li
139.262 23.7806 li
140.082 24.0853 li
.0471 gry
f
166.202 24.0853 mo
165.186 24.0853 li
160.911 12.5808 li
161.713 10.4226 li
160.893 10.1178 li
162.112 6.83697 li
162.932 7.14177 li
164.211 3.7006 li
166.322 3.7006 li
166.322 3.70024 li
166.322 2.82537 li
169.823 2.82537 li
169.823 3.7006 li
171.364 3.7006 li
172.842 7.67668 li
173.662 7.37181 li
174.881 10.6527 li
174.061 10.9575 li
175.519 14.8835 li
174.073 18.7517 li
173.136 18.4014 li
171.337 23.2104 li
166.202 23.2104 li
166.202 24.0853 li
.17298 .0204844 .0386928 0 cmyk
f
162.994 23.2104 mo
156.961 23.2104 li
156.981 23.1554 li
160.012 23.1554 li
160.012 21.7256 li
160.012 23.1554 li
162.973 23.1554 li
162.994 23.2104 li
157.975 20.2351 mo
157.235 19.9603 li
158.454 16.6796 li
159.112 16.9238 li
157.975 20.2351 li
.173303 .04406 .179177 0 cmyk
f
165.186 24.0853 mo
162.702 24.0853 li
162.702 23.2104 li
156.961 23.2104 li
162.994 23.2104 li
162.973 23.1554 li
164.342 23.1554 li
163.848 21.7256 li
161.771 15.7254 li
160.792 12.8992 li
160.911 12.5808 li
165.186 24.0853 li
.172549 .0196078 .0392157 .4 cmyk
f
166.202 23.2104 mo
173.202 23.2104 li
173.202 24.9605 li
166.202 24.9605 li
166.202 23.2104 li
176.702 23.2104 mo
178.614 23.2104 li
177.718 20.8 li
179.358 20.1904 li
181.131 24.9605 li
176.702 24.9605 li
176.702 23.2104 li
176.499 17.5192 mo
174.061 10.9575 li
175.701 10.3479 li
178.139 16.9096 li
176.499 17.5192 li
172.842 7.67668 mo
171.364 3.7006 li
169.823 3.7006 li
169.823 1.95051 li
172.581 1.95051 li
174.482 7.06708 li
172.842 7.67668 li
166.322 3.7006 mo
164.211 3.7006 li
162.932 7.14177 li
161.292 6.53217 li
162.994 1.95051 li
166.322 1.95051 li
166.322 3.70024 li
166.322 3.7006 li
161.713 10.4226 mo
159.274 16.9843 li
157.634 16.3747 li
160.072 9.81301 li
161.713 10.4226 li
158.056 20.2651 mo
156.961 23.2104 li
162.702 23.2104 li
162.702 24.9605 li
154.444 24.9605 li
156.415 19.6555 li
158.056 20.2651 li
.0471 gry
f
194.83 23.0453 mo
180.419 23.0453 li
179.957 21.8013 li
179.933 21.7256 li
178.012 15.7349 li
178.012 16.5683 li
178.012 15.7349 li
178.009 15.7254 li
177.182 13.1456 li
176.958 13.7317 li
176.456 12.3797 li
176.875 11.2588 li
177.812 11.6094 li
180.686 3.92542 li
187.095 3.92542 li
187.095 2.92558 li
188.363 2.92558 li
190.724 9.2305 li
189.787 9.58127 li
194.83 23.0453 li
.119492 0 .187313 0 cmyk
f
174.919 19.0685 mo
174.073 18.7517 li
175.519 14.8835 li
176.012 16.209 li
174.919 19.0685 li
.221453 .0118108 .209642 0 cmyk
f
180.419 23.0453 mo
180.356 23.0453 li
179.957 21.8013 li
180.419 23.0453 li
176.012 16.209 mo
175.519 14.8835 li
176.456 12.3797 li
176.958 13.7317 li
176.197 15.7254 li
176.012 16.209 li
.117647 0 .188235 .560784 cmyk
f
187.095 3.92542 mo
180.686 3.92542 li
177.812 11.6094 li
175.939 10.9083 li
179.299 1.92536 li
187.095 1.92536 li
187.095 3.92542 li
175.009 19.1021 mo
173.534 23.0453 li
194.83 23.0453 li
189.787 9.58127 li
191.66 8.87985 li
197.715 25.0454 li
170.651 25.0454 li
173.136 18.4014 li
175.009 19.1021 li
.0471 gry
f
gsave
148.042 23.2953 mo
144.632 13.4254 li
141.472 23.2953 li
148.042 23.2953 li
eclp
gsave
136.012 27.7254 mo
142.012 27.7254 li
142.012 21.7256 li
136.012 21.7256 li
136.012 27.7254 li
clp
142.012 23.0453 mo
141.552 23.0453 li
141.975 21.7256 li
142.012 21.7256 li
142.012 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 2.25 -136.725 113.623 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~3]];_3]];_3Z]=`*Zc@D*Zb~>
<~/1`>'/1`>'//&[1',)#m',(~>
<~CMR^$CMR^$CK"/1;c?Un;c<~>
<~!<E3%!<E3%!<<*"!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
142.012 23.2104 mo
141.5 23.2104 li
141.552 23.0453 li
142.012 23.0453 li
142.012 23.2104 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -136.725 113.248 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'E~>
<~',)#m',)#m'*~>
<~6psF26psF26i~>
<~:JXb^:JXb^:B~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
142.012 23.2953 mo
141.472 23.2953 li
141.5 23.2104 li
142.012 23.2104 li
142.012 23.2953 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -136.725 113.248 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'E~>
<~$O[=M$O[=M$N~>
<~'bqGu'bqGu'`~>
<~KS5#3KS5#3KE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
142.012 27.7254 mo
148.012 27.7254 li
148.012 21.7256 li
142.012 21.7256 li
142.012 27.7254 li
clp
146.64 23.0453 mo
142.012 23.0453 li
142.012 21.7256 li
146.146 21.7256 li
146.64 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 2.25 -136.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 6 
/M[14 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@U`e-3Z]=`*Zc@D*Zed"@QHOk*Zc@D*Zc@D@U`e-3Z]=`*Zc@D*Zd@'3auPZ3Z]=`*Zc@D3]]<2@QHOk
*Zc@D*Zc@D*]c>k@QHOk*Zc@D~>
<~<`W6P//&[1',)#m',+DI<\,d8',)#m',)#m<`W6P//&[1',)#m',)oJ/65e&//&[1',)#m/1`>Q<\,d8
',)#m',)#m'.b\8<\,d8',)#m~>
<~Mi3L/CK"/1;c?Un;cAU4Med*,;c?Un;c?UnMi3L/CK"/1;c?Un;c@IICQ"*dCK"/1;c?UnCMR^DMed*,
;c?Un;c?Un;ep0,Med*,;c?Un~>
<~Bk_8^!<<*"!!!!!!!$_IB`S57!!!!!!!!!!Bk_8^!<<*"!!!!!!!!$#!GQ6K!<<*"!!!!!!<E48B`S57
!!!!!!!!!!!!*+7B`S57!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
148.012 23.2104 mo
142.012 23.2104 li
142.012 23.0453 li
146.64 23.0453 li
146.146 21.7256 li
147.5 21.7256 li
148.012 23.2078 li
148.012 23.2104 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[6.75 0 0 2.25 -136.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 6 
/M[18 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BJZ[0bb<9'GM5q'GM690eld4=>;NE'GM5q'GM5q'JV<s=BJZ[0bb<9'GM5q'GM690ekC;0j%O40bb<9
'GM5q'GM5q0ekCb=>;NE'GM5q'GM5q'GM5q'JV=E=>;NE'GM5q'GM5q~>
<~<`W6P//&[1',)#m',)$1/1ah&<\,d8',)#m',)#m'.b[c<`W6P//&[1',)#m',)$1/1`>'/65e&//&[1
',)#m',)#m/1`>Q<\,d8',)#m',)#m',)#m'.b\8<\,d8',)#m',)#m~>
<~I!g<H>XUtJ6psF26psFJ>[2Z(HsBoE6psF26psF26sNu%I!g<H>XUtJ6psF26psFJ>[1N=>^Up(>XUtJ
6psF26psF2>[1N]HsBoE6psF26psF26psF26sNuEHsBoE6psF26psF2~>
<~\@B%F:esk_:JXb^:JXb_:f+[3\56!t:JXb^:JXb^:Jaka\@B%F:esk_:JXb^:JXb_:f'tb:q4#3:esk_
:JXb^:JXb^:f'uu\56!t:JXb^:JXb^:JXb^:Jalt\56!t:JXb^:JXb^~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
148.012 23.2953 mo
142.012 23.2953 li
142.012 23.2104 li
148.012 23.2104 li
148.012 23.2953 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[6.75 0 0 1.125 -136.35 113.248 ]ct
snap_to_device
<<
/T 1
/W 18 
/H 3 
/M[18 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekCb=>;NE'GM5q'GM5q'GM5q'JV=E=>;NE'GM5q'GM5q'GM690j%O40bb<9'GM5q'GL~>
<~,U=X2:F%1n$O[=M$O[=M$O[=M$R?un:F%1n$O[=M$O[=M$O[=f,Yq2],RXtf$O[=M$OZ~>
<~/M/PK9e@q3'bqGu'bqGu'bqGu'eM"39e@q3'bqGu'bqGu'bqH8/PSqk/JT!8'bqGu'bp~>
<~KS5$Gm=^.GKS5#3KS5#3KS5#3KS5$Gm=^.GKS5#3KS5#3KS5#3K^J/[KS5#3KS5#3KS0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
148.012 27.7254 mo
154.012 27.7254 li
154.012 21.7256 li
148.012 21.7256 li
148.012 27.7254 li
clp
148.013 23.2104 mo
148.012 23.2104 li
148.012 23.2078 li
148.013 23.2104 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -130.35 113.248 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekBs'GM5q'E~>
<~/1`=c',)#m'*~>
<~>[1N%6psF26i~>
<~:f'ta:JXb^:B~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
148.042 23.2953 mo
148.012 23.2953 li
148.012 23.2104 li
148.013 23.2104 li
148.042 23.2953 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -130.35 113.248 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekBs'GM5q'E~>
<~,U=WC$O[=M$N~>
<~/M/Oh'bqGu'`~>
<~KS5#3KS5#3KE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
136.012 21.7256 mo
142.012 21.7256 li
142.012 15.7254 li
136.012 15.7254 li
136.012 21.7256 li
clp
142.012 21.7256 mo
142.012 21.7256 li
141.975 21.7256 li
142.012 21.6086 li
142.012 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -136.35 114.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@U]sZ@M0:d&c~>
<~<`T]2<XoTL%K~>
<~Mi2Y7MfWr\Er~>
<~Bk[Q]B`J,5!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
142.012 21.7256 mo
148.012 21.7256 li
148.012 15.7254 li
142.012 15.7254 li
142.012 21.7256 li
clp
146.146 21.7256 mo
142.012 21.7256 li
142.012 21.6086 li
142.487 20.1257 li
144.011 16.0253 li
146.146 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.875 0 0 6.375 -136.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 13 
/H 17 
/M[13 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~@U`e-3Z]=`*Zc@D*b&Sf3]\<'*Zc@D*Zd@'3auPZ3Z]=`*Zc@`3]^_Z3]\<'*Zc@D*Zc@`3auPZ3Z]=`
*Zc@D3]^_Z3]\<'*Zc@D*Zc@`3auPZ3Z]=`*Zc@D3]^_Z3]\<'*Zc@D*Zc@`3auPZ3Z]=`*Zc@D3]^_Z
3]\<'*Zc@D*Zc@`3auP>*Zc@D*Zc@D3]^_Z*Zc@D*Zc@D*Zc@`3Z]=`*Zc@D*Zc@D3]];_3Z]=`*Zc@D
*Zc@`3]\<'*Zc@D*Zc@D3]];C*Zc@D*Zc@D*W~>
<~<`W6P//&[1',)#m'38.7/1_GJ',)#m',)oJ/65e&//&[1',)$1/1ah&/1_GJ',)#m',)$1/65e&//&[1
',)#m/1ah&/1_GJ',)#m',)$1/65e&//&[1',)#m/1ah&/1_GJ',)#m',)$1/65e&//&[1',)#m/1ah&
/1_GJ',)#m',)$1/65db',)#m',)#m/1ah&',)#m',)#m',)$1//&[1',)#m',)#m/1`>'//&[1',)#m
',)$1/1_GJ',)#m',)#m/1`=c',)#m',)#m'*~>
<~Mi3L/CK"/1;c?Un;i?QlCMQjI;c?Un;c@IICQ"*dCK"/1;c?V1CMSidCMQjI;c?Un;c?V1CQ"*dCK"/1
;c?UnCMSidCMQjI;c?Un;c?V1CQ"*dCK"/1;c?UnCMSidCMQjI;c?Un;c?V1CQ"*dCK"/1;c?UnCMSid
CMQjI;c?Un;c?V1CQ"*L;c?Un;c?UnCMSid;c?Un;c?Un;c?V1CK"/1;c?Un;c?UnCMR^$CK"/1;c?Un
;c?V1CMQjI;c?Un;c?UnCMR]a;c?Un;c?Un;Z~>
<~Bk_8^!<<*"!!!!!!,6.]!<E0#!!!!!!!!$#!GQ6K!<<*"!!!!"!<HnK!<E0#!!!!!!!!!"!GQ6K!<<*"
!!!!!!<HnK!<E0#!!!!!!!!!"!GQ6K!<<*"!!!!!!<HnK!<E0#!!!!!!!!!"!GQ6K!<<*"!!!!!!<HnK
!<E0#!!!!!!!!!"!GQ6J!!!!!!!!!!!<HnK!!!!!!!!!!!!!!"!<<*"!!!!!!!!!!!<E3%!<<*"!!!!!
!!!!"!<E0#!!!!!!!!!!!<E3$!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
147.5 21.7256 mo
146.146 21.7256 li
144.011 16.0253 li
144.122 15.7254 li
145.427 15.7254 li
147.5 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.5 0 0 6.75 -134.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 18 
/M[12 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GN8V'GM5q'GM5q'GN8V'GM5q'GM5q'GN8V0ej@V'GM5q'GM5q0ej@V'GM5q'GM5q=BI:4
'GM5q'GM5q=BI:4'GM5q'GM5q0eld40ej@V'GM5q0eld40ej@V'GM5q'GN8V=BI:4'GM5q'GN8V=BI:4
'GM5q'GM5q0eld40ej@V'GM5q0eld40ej@V'GM5q'GN8V=BI:4'GM5q'GN8V=BI:4'GM5q'GM5q0eld4
'GM5q'GM5q0eld4'GM5q'GM5q0eld4~>
<~',)#m',)#m',)oJ',)#m',)#m',)oJ',)#m',)#m',)oJ/1_GJ',)#m',)#m/1_GJ',)#m',)#m<`Ub&
',)#m',)#m<`Ub&',)#m',)#m/1ah&/1_GJ',)#m/1ah&/1_GJ',)#m',)oJ<`Ub&',)#m',)oJ<`Ub&
',)#m',)#m/1ah&/1_GJ',)#m/1ah&/1_GJ',)#m',)oJ<`Ub&',)#m',)oJ<`Ub&',)#m',)#m/1ah&
',)#m',)#m/1ah&',)#m',)#m/1ah&~>
<~6psF26psF26pt9b6psF26psF26pt9b6psF26psF26pt9b>[0Zb6psF26psF2>[0Zb6psF26psF2I!f1(
6psF26psF2I!f1(6psF26psF2>[2Z(>[0Zb6psF2>[2Z(>[0Zb6psF26pt9bI!f1(6psF26pt9bI!f1(
6psF26psF2>[2Z(>[0Zb6psF2>[2Z(>[0Zb6psF26pt9bI!f1(6psF26pt9bI!f1(6psF26psF2>[2Z(
6psF26psF2>[2Z(6psF26psF2>[2Z(~>
<~:JXb^:JXb^:JXe`:JXb^:JXb^:JXe`:JXb^:JXb^:JXe`:f'q`:JXb^:JXb^:f'q`:JXb^:JXb^\@>@3
:JXb^:JXb^\@>@3:JXb^:JXb^:f+[3:f'q`:JXb^:f+[3:f'q`:JXb^:JXe`\@>@3:JXb^:JXe`\@>@3
:JXb^:JXb^:f+[3:f'q`:JXb^:f+[3:f'q`:JXb^:JXe`\@>@3:JXb^:JXe`\@>@3:JXb^:JXb^:f+[3
:JXb^:JXb^:f+[3:JXb^:JXb^:f+[3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
142.487 20.1257 mo
143.896 15.7254 li
144.122 15.7254 li
144.011 16.0253 li
142.487 20.1257 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 5.25 -135.975 116.623 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 14 
/M[7 0 0 -14 0 14 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=BI:4'GM6`=>;NE'GOYO0ej@V'JV=E=>;NE0eld40ej@V'JV=E=>:L(0eld40bb<9'JV=E'GM5q0elcE
'GM5q'JU:9'GM5q0bb<9'GM5q'GM5q'GM5q'GM5q'GL~>
<~:JW5]$O[><:F%1n$O]a+,U<a*$R?un:F%1n,U?/],U<a*$R?un:F$;U,U?/],RXtf$R?un$O[=M,U?.n
$O[=M$R?)f$O[=M,RXtf$O[=M$O[=M$O[=M$O[=M$OZ~>
<~9hd2k'bqHX9e@q3'bsG;/M.\P'eM"39e@q3/M0[k/M.\P'eM"39e@(p/M0[k/JT!8'eM"3'bqGu/M0[3
'bqGu'eL.8'bqGu/JT!8'bqGu'bqGu'bqGu'bqGu'bp~>
<~mHoR[KS5$Gm=^.GKS8a[KS5#3KS5$Gm=^.GKS8a[KS5#3KS5$Gm=^.GKS8a[KS5#3KS5$GKS5#3KS8`G
KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
142.012 15.7254 mo
148.012 15.7254 li
148.012 9.72556 li
142.012 9.72556 li
142.012 15.7254 li
clp
145.427 15.7254 mo
144.122 15.7254 li
144.798 13.906 li
145.427 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 2.625 -134.1 121.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 7 
/M[5 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM690bb<90ej@V'GM5q'GM5q'GM5q'GM5q'GM5q'GM5~>
<~',)$1//&[1/1_GJ',)#m',)#m',)#m',)#m',)#m',)#~>
<~6psFJ>XUtJ>[0Zb6psF26psF26psF26psF26psF26psE~>
<~:JXb_:esk_:f'q`:JXb^:JXb^:JXb^:JXb^:JXb^:JXa~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
144.122 15.7254 mo
143.896 15.7254 li
144.632 13.4254 li
144.798 13.906 li
144.122 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3 -134.475 121.123 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 8 
/M[4 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GN8V'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q~>
<~$O\4*$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M~>
<~'br;P'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
164.342 23.1554 mo
160.642 12.4653 li
156.972 23.1554 li
164.342 23.1554 li
eclp
gsave
154.012 27.7254 mo
160.012 27.7254 li
160.012 21.7256 li
154.012 21.7256 li
154.012 27.7254 li
clp
160.012 23.1554 mo
156.981 23.1554 li
157.513 21.7256 li
160.012 21.7256 li
160.012 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.75 0 0 2.25 -121.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 6 
/M[10 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.k<,@84Y6].k<,#.nE3%.k<,#.k<,@84Y6].k<,#.k<,#.k<,#.k<,#.k=.@.k<,#.k<,#~>
<~&J5Te&J5U).Ol#B&J5Te&Lo7[&J5Te&J5U).Ol#B&J5Te&J5Te&J5Te&J5Te&J6K)&J5Te&J5Te~>
<~/hSb//hSbG7Rf!_/hSb//k/<"/hSb//hSbG7Rf!_/hSb//hSb//hSb//hSb//hTUG/hSb//hSb/~>
<~!!!!!!!!!"!<E0#!!!!!!!**$!!!!!!!!!"!<E0#!!!!!!!!!!!!!!!!!!!!!!!$"!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
156.981 23.1554 mo
156.972 23.1554 li
157.463 21.7256 li
157.513 21.7256 li
156.981 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 2.25 -121.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM69'GL~>
<~$O[=M$O[=M$O[=M$O[=f$OZ~>
<~'bqGu'bqGu'bqGu'bqH8'bp~>
<~KS5#3KS5#3KS5#3KS5#3KS0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
160.012 27.7254 mo
166.012 27.7254 li
166.012 21.7256 li
160.012 21.7256 li
160.012 27.7254 li
clp
162.973 23.1554 mo
160.012 23.1554 li
160.012 21.7256 li
162.442 21.7256 li
162.973 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.75 0 0 2.25 -118.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 6 
/M[10 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@.k>OVDb*DL.k<,#Df9Pb81Q2@.k=.]88iE;81Q2@84Z9iDb*DL.k<,#.nE3LDb*DL~>
<~<E3$K.M37)&J8#C<@TI1&J5Te<E3$K.M37)&J6KB.TKIu.M37).OloJ<@TI1&J5Te&Lo81<@TI1~>
<~AnGXE7P6;G/hUaJAk#6B/hSb/AnGXE7P6;G/hTU_7V67%7P6;G7RfjZAk#6B/hSb//k/<BAk#6B~>
<~Bk_8^!<<*"!!$_IB`S57!!!!!Bk_8^!<<*"!!!$#!GQ6K!<<*"!<E48B`S57!!!!!!!*+7B`S57~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
164.342 23.1554 mo
162.973 23.1554 li
162.442 21.7256 li
163.848 21.7256 li
164.342 23.1554 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 2.25 -116.1 113.623 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'81Z;C/1`>'81Z;C/1`>'Db*DM/1`>'~>
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY-OpUr%LrsY-OpUr%LrsY;C<h%%LrsY~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_81)h/O)]K_81)h/O)]K_8;DL!H)]K_8~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS3&`cT2`EZS3&`cT2`EZSTK"ni2`EZS~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
154.012 21.7256 mo
160.012 21.7256 li
160.012 15.7254 li
154.012 15.7254 li
154.012 21.7256 li
clp
160.012 21.7256 mo
160.012 21.7256 li
157.513 21.7256 li
158.056 20.2651 li
157.975 20.2351 li
159.112 16.9238 li
159.274 16.9843 li
159.742 15.7254 li
160.012 15.7254 li
160.012 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3.375 0 0 6.75 -120.975 115.123 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 18 
/M[9 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.k<,#.k=.]81Q2@.k<,@84Y6].k<,#84Z9%.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,@
81Q2@.k<,#84Y6].k<,#.rT>s81Q2@.k>OV84Y6].k<,@88iE;81Q2@84[Z;84Y6].k<,@88iE;84Y6]
84[Z;84Z9%.k<,@88iEb.k<,#84[Z;D_!=g.nE3LDf5~>
<~&J5Te&J6KB.M37)&J5U).Ol#B&J5Te.Oln[&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5U)
.M37)&J5Te.Ol#B&J5Te&QMg\.M37)&J8#C.Ol#B&J5U).TKIu.M37).OnFu.Ol#B&J5U).TKIu.Ol#B
.OnFu.Oln[&J5U).TKJK&J5Te.OnFu<=ofT&Lo81<E0~>
<~/hSb//hTU_7P6;G/hSbG7Rf!_/hSb/7Rfj"/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSbG
7P6;G/hSb/7Rf!_/hSb//nS]b7P6;G/hUaJ7Rf!_/hSbG7V67%7P6;G7Rh!%7Rf!_/hSbG7V67%7Rf!_
7Rh!%7Rfj"/hSbG7V67E/hSb/7Rh!%AhG\g/k/<BAnD~>
<~!!!!!!!!$#!<<*"!!!!"!<E0#!!!!!!<E3$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
!<<*"!!!!!!<E0#!!!!!!,6-J!<<*"!!$_I!<E0#!!!!"!GQ6K!<<*"!<HnK!<E0#!!!!"!GQ6K!<E0#
!<HnK!<E3$!!!!"!GQ7^!!!!!!<HnKB`J,5!!*+7Bk[~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
157.513 21.7256 mo
157.463 21.7256 li
157.975 20.2351 li
158.056 20.2651 li
157.513 21.7256 li
159.274 16.9843 mo
159.112 16.9238 li
159.523 15.7254 li
159.742 15.7254 li
159.274 16.9843 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -120.975 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GN8V'GM5q'GN8V'GM5q'GN8V'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0ej@V'GM5q
0ej@V'GM5q=BI:4'GM5q=BI:4'GM5q0eld40ej@V0eld40ej@V'GN8V=BI:4'GN8V=BI:4'GM5q0eld4
'GM5q0eld4'GM5q0eld4~>
<~$O[=M$O\4*$O[=M$O\4*$O[=M$O\4*$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,U<a*$O[=M
,U<a*$O[=M:JW5]$O[=M:JW5]$O[=M,U?/],U<a*,U?/],U<a*$O\4*:JW5]$O\4*:JW5]$O[=M,U?/]
$O[=M,U?/]$O[=M,U?/]~>
<~'bqGu'br;P'bqGu'br;P'bqGu'br;P'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/M.\P'bqGu
/M.\P'bqGu9hd2k'bqGu9hd2k'bqGu/M0[k/M.\P/M0[k/M.\P'br;P9hd2k'br;P9hd2k'bqGu/M0[k
'bqGu/M0[k'bqGu/M0[k~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS5#3KS5#3mHoR[KS5#3mHoR[KS5#3KS8a[KS5#3KS8a[KS5#3KS5#3mHoR[KS5#3mHoR[KS5#3KS8a[
KS5#3KS8a[KS5#3KS8a[~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
160.012 21.7256 mo
166.012 21.7256 li
166.012 15.7254 li
160.012 15.7254 li
160.012 21.7256 li
clp
162.442 21.7256 mo
160.012 21.7256 li
160.012 15.7254 li
160.212 15.7254 li
162.442 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 6.75 -118.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 18 
/M[8 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df9Pb81Q2@Df9Pb81Q2@Df9Pb81Q2@84Z9iDb*DL84Z9iDb*DL.k<,@88iE;.k<,@88iE;.k<,#.nE3L
.k<,#.nE3L.k<,#.k<,@.k<,#.k<,@.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#84Z9%.k<,#
84Z9%.k<,#84Z9%.k<,#~>
<~<E3$K.M37)<E3$K.M37)<E3$K.M37).OloJ<@TI1.OloJ<@TI1&J5U).TKIu&J5U).TKIu&J5Te&Lo81
&J5Te&Lo81&J5Te&J5U)&J5Te&J5U)&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te.Oln[&J5Te
.Oln[&J5Te.Oln[&J5Te~>
<~AnGXE7P6;GAnGXE7P6;GAnGXE7P6;G7RfjZAk#6B7RfjZAk#6B/hSbG7V67%/hSbG7V67%/hSb//k/<B
/hSb//k/<B/hSb//hSbG/hSb//hSbG/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/7Rfj"/hSb/
7Rfj"/hSb/7Rfj"/hSb/~>
<~Bk_8^!<<*"Bk_8^!<<*"Bk_8^!<<*"!<E48B`S57!<E48B`S57!!!!"!GQ6K!!!!"!GQ6K!!!!!!!*+7
!!!!!!!*+7!!!!!!!!!"!!!!!!!!!"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<E3$!!!!!
!<E3$!!!!!!<E3$!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
163.848 21.7256 mo
162.442 21.7256 li
160.212 15.7254 li
161.771 15.7254 li
163.848 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.125 0 0 6.75 -117.975 115.123 ]ct
snap_to_device
<<
/T 1
/W 11 
/H 18 
/M[11 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Df80;/1`>'/1`>jDb*DM/1`>'/1b^X84Y9_/1`>'/4`<MDb*DM/1`>'84[Z;84Y9_/1`>'/4`<MDb*DM
/1`>'84[Z;84Y9_/1`>'/4`<MDb*DM/1`>'84[Z;84Y9_/1`>'/4`<MDb)E1/1`>'84[Z;81Z;C/1`>'
/4`<M/1`>'/1`>'84[YM/1`>'/1`>'/4_<C/1`>'/1`>'84Z9&/1`>'/1`>'84Y9_/1`>'/1`>C81Z;C
/1`>'/1^~>
<~;Gnki%LrsY%LrtH;C<h%%LrsY%LuB7-RTB6%LrsY%OWW%;C<h%%LrsY-RVei-RTB6%LrsY%OWW%;C<h%
%LrsY-RVei-RTB6%LrsY%OWW%;C<h%%LrsY-RVei-RTB6%LrsY%OWW%;C;qa%LrsY-RVei-OpUr%LrsY
%OWW%%LrsY%LrsY-RVe%%LrsY%LrsY%OV_r%LrsY%LrsY-RU8O%LrsY%LrsY-RTB6%LrsY%Lrsr-OpUr
%LrsY%Lr~>
<~;Go8*)]K_8)]K_o;DL!H)]K_8)]M[Q1,9df)]K_8)_s0H;DL!H)]K_81,;a*1,9df)]K_8)_s0H;DL!H
)]K_81,;a*1,9df)]K_8)_s0H;DL!H)]K_81,;a*1,9df)]K_8)_s0H;DK11)]K_81,;a*1)h/O)]K_8
)_s0H)]K_8)]K_81,;`H)]K_8)]K_8)_r?O)]K_8)]K_81,:U()]K_8)]K_81,9df)]K_8)]K_O1)h/O
)]K_8)]J~>
<~TV+8(2`EZS2`E[gTK"ni2`EZS2`ID&3&iiU2`EZS2`NdiTK"ni2`EZS3&mS(3&iiU2`EZS2`NdiTK"ni
2`EZS3&mS(3&iiU2`EZS2`NdiTK"ni2`EZS3&mS(3&iiU2`EZS2`NdiTK"kh2`EZS3&mS(3&`cT2`EZS
2`Ndi2`EZS2`EZS3&mQi2`EZS2`EZS2`N`T2`EZS2`EZS3&ilV2`EZS2`EZS3&iiU2`EZS2`EZT3&`cT
2`EZS2`C~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
154.012 15.7254 mo
160.012 15.7254 li
160.012 9.72556 li
154.012 9.72556 li
154.012 15.7254 li
clp
160.012 15.7254 mo
160.012 15.7254 li
159.742 15.7254 li
159.977 15.093 li
160.012 15.1872 li
160.012 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.5 -118.725 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84Z9iDf9Q4Df9Q4~>
<~.OloJ<E3%!<E3%!~>
<~7RfjZAnGXeAnGXe~>
<~!<E48Bk_9qBk_9q~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
160.012 15.1872 mo
159.977 15.093 li
160.012 14.9987 li
160.012 15.1872 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -118.35 121.498 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84Y:MD_,gF/-~>
<~-RT'q;?]rr"T~>
<~1,927;@6<"$3~>
<~3&kNCTOsjiAc~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
159.742 15.7254 mo
159.523 15.7254 li
160.012 14.3004 li
160.012 14.9987 li
159.977 15.093 li
159.742 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 2.25 -118.725 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM690ekC;0j%O[=BJ[-=BG~>
<~$O[=f,U=W\,Yq33:JXb^:JU~>
<~'bqH8/M/P+/PSr69he>V9hb~>
<~KS5#3KS5#3K^J0omHs<.mHj~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
160.012 15.7254 mo
166.012 15.7254 li
166.012 9.72556 li
160.012 9.72556 li
160.012 15.7254 li
clp
160.212 15.7254 mo
160.012 15.7254 li
160.012 15.1872 li
160.212 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -118.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84Z9B84Z9B8,~>
<~.Olnt.Olnt.K~>
<~7Rfj:7Rfj:7K~>
<~!<E3%!<E3%!<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
161.771 15.7254 mo
160.212 15.7254 li
160.012 15.1872 li
160.012 14.9987 li
160.792 12.8992 li
161.771 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 3.75 -118.35 121.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 10 
/M[7 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/1`>'/4`;_/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/4`<&/1`>'84Z9&/1`>C
84Y9_/1^~>
<~%LrsY%OWV6%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%OWVO%LrsY-RU8O%Lrsr
-RTB6%Lr~>
<~)]K_8)_s/f)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)_s0()]K_81,:U()]K_O
1,9df)]J~>
<~2`EZS2`NcU2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`NcV2`EZS3&ilV2`EZT
3&iiU2`C~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
160.012 14.9987 mo
160.012 14.3004 li
160.642 12.4653 li
160.792 12.8992 li
160.012 14.9987 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 3.375 -118.35 121.873 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 9 
/M[4 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q0ekBs~>
<~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M,U=WC~>
<~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu/M/Oh~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
gsave
180.362 23.0654 mo
177.182 13.1456 li
173.392 23.0654 li
180.362 23.0654 li
eclp
gsave
172.012 27.7254 mo
178.012 27.7254 li
178.012 21.7256 li
172.012 21.7256 li
172.012 27.7254 li
clp
178.012 23.0453 mo
173.534 23.0453 li
174.028 21.7256 li
178.012 21.7256 li
178.012 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 2.25 -104.85 113.623 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 6 
/M[14 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~:GO[\1,:U?1,:U\:JXbA1,:U?1,:U?1/C\A:GO[\1,:U?1,:U\:JZ.0:GO[\1,:U?1,:U?G#(mh1,:U?
1,:U?1,;XKG#(mh1,:U?1,:U?~>
<~-4LCn%1NaU%1Nan-71&K%1NaU%1NaU%43DK-4LCn%1NaU%1Nan-72S:-4LCn%1NaU%1NaU;'mV!%1NaU
%1NaU%1OX];'mV!%1NaU%1NaU~>
<~8hr.W1,:U?1,:UW8kM]21,:U?1,:U?1.k/28hr.W1,:U?1,:UW8kNhj8hr.W1,:U?1,:U?C._)R1,:U?
1,:U?1,;I:C._)R1,:U?1,:U?~>
<~!<<*"!!!!!!!!!"!<E3$!!!!!!!!!!!!**$!<<*"!!!!!!!!!"!<Hm8!<<*"!!!!!!!!!!B`S57!!!!!
!!!!!!!!%6B`S57!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
178.012 23.0654 mo
173.392 23.0654 li
173.904 21.7256 li
174.028 21.7256 li
173.534 23.0453 li
178.012 23.0453 li
178.012 23.0654 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[5.25 0 0 2.25 -104.85 113.623 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 6 
/M[14 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0bb<9'GM5q'GM690ekBs'GM5q'GM5q'JV<s0bb<9'GM5q'GM690elcb0bb<9'GM5q'GM5q=>;NE'GM5q
'GM5q'GN9(=>;NE'GM5q'GM5q~>
<~,RXtf$O[=M$O[=f,U=WC$O[=M$O[=M$R?uC,RXtf$O[=M$O[=f,U?/2,RXtf$O[=M$O[=M:F%1n$O[=M
$O[=M$O\4U:F%1n$O[=M$O[=M~>
<~/JT!8'bqGu'bqH8/M/Oh'bqGu'bqGu'eM!h/JT!8'bqGu'bqH8/M0[K/JT!8'bqGu'bqGu9e@q3'bqGu
'bqGu'br;p9e@q3'bqGu'bqGu~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS8`GKS5#3KS5#3KS5#3m=^.GKS5#3
KS5#3KS5$Gm=^.GKS5#3KS5#3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
178.012 27.7254 mo
184.012 27.7254 li
184.012 21.7256 li
178.012 21.7256 li
178.012 27.7254 li
clp
179.957 21.8013 mo
179.929 21.7256 li
179.933 21.7256 li
179.957 21.8013 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 1.125 -98.4752 114.748 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,Q~>
<~$O[=M$O[=M$N~>
<~0/"t30/"t30)~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
178.552 23.0453 mo
178.012 23.0453 li
178.012 21.7256 li
178.062 21.7256 li
178.552 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 2.25 -100.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%PG'8%PG#(n0:JXbA1,8~>
<~;,L1f;,L1f;'mV:-71&K%1N~>
<~C2.KuC2.KuC._)j8kM]21,8~>
<~Bk_9qBk_9qB`S58!<E3$!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
180.356 23.0453 mo
178.552 23.0453 li
178.062 21.7256 li
179.929 21.7256 li
179.957 21.8013 li
180.356 23.0453 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 2.25 -100.35 113.623 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'F5pR^$BP;'F5pR^$BP;'F5pR^$5s[eMBL+p05s[eMBL+p0,U=X$6"jpt~>
<~:JXb3,RXtf:JXb3,RXtf:JXb3,RXtf,U=X2:F%1n,U=X2:F%1n$O[=f,Yq2]~>
<~B4kjI7kZMKB4kjI7kZMKB4kjI7kZMK7n6'^B1GHF7n6'^B1GHF0/"tK7qZI)~>
<~[^NV>:/+GW[^NV>:/+GW[^NV>:/+GW:/4Qm[SBRl:/4Qm[SBRl9he>W::@T+~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
180.362 23.0654 mo
178.012 23.0654 li
178.012 23.0453 li
178.552 23.0453 li
180.356 23.0453 li
180.362 23.0654 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[3 0 0 1.125 -100.35 113.248 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 3 
/M[8 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ekCb=>;NE'GM690j%O4'GM690j%O4~>
<~,U=X2:F%1n$O[=f,Yq2]$O[=f,Yq2]~>
<~/M/PK9e@q3'bqH8/PSqk'bqH8/PSqk~>
<~KS5$Gm=^.GKS5#3K^J/[KS5#3K^J/[~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
172.012 21.7256 mo
178.012 21.7256 li
178.012 15.7254 li
172.012 15.7254 li
172.012 21.7256 li
clp
178.012 19.0794 mo
177.319 17.2143 li
178.012 16.9567 li
178.012 19.0794 li
178.012 16.5683 mo
177.699 15.7254 li
178.009 15.7254 li
178.012 15.7349 li
178.012 16.5683 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.5 0 0 4.125 -101.1 117.748 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 11 
/M[4 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,XF^^,XF^^,XF^^,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\~>
<~$R?uC$R?uC$R?uC$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M~>
<~01SN&01SN&01SN&0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3~>
<~!!**$!!**$!!**$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
178.012 21.7256 mo
178.012 21.7256 li
174.028 21.7256 li
175.009 19.1021 li
174.919 19.0685 li
176.012 16.209 li
176.499 17.5192 li
177.319 17.2143 li
178.012 19.0794 li
178.012 20.6906 li
177.718 20.8 li
178.012 21.5924 li
178.012 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[4.875 0 0 6.375 -104.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 13 
/H 17 
/M[13 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1,;X$:GO[\1,:U?1,:U\:JXb^1,:U?1,:U?1,:U\:GO[\1,:U?1,:U?G'6YW1,:U?1,:U?
13Rh::GO[\1,:U?1,;X$G'6YW1,:U?1,:U\:NgnW:GO[\1,:U?1,;X$G'6YW1,:U?1,:U\:NgnW:GO[\
1,:U?1,;X$G'6YW1,:U?1,:U\:NgnW:GO[\1,:U?1,;X$G'6YW:GO[\1,:U\:NgnW:JW`$1,:U?1,;X$
G'8$a1,:U?1,:U\:Ngo)1,:U?1,:U?:JZ.WFo~>
<~%1NaU%1NaU%1OX2-4LCn%1NaU%1Nan-71&d%1NaU%1NaU%1Nan-4LCn%1NaU%1NaU;,JYe%1NaU%1NaU
%8ftL-4LCn%1NaU%1OX2;,JYe%1NaU%1Nan-;dVe-4LCn%1NaU%1OX2;,JYe%1NaU%1Nan-;dVe-4LCn
%1NaU%1OX2;,JYe%1NaU%1Nan-;dVe-4LCn%1NaU%1OX2;,JYe-4LCn%1Nan-;dVe-7002%1NaU%1OX2
;,L1"%1NaU%1Nan-;dW;%1NaU%1NaU-72Se;#~>
<~1,:U?1,:U?1,;Ho8hr.W1,:U?1,:UW8kM]J1,:U?1,:U?1,:UW8hr.W1,:U?1,:U?C2-@51,:U?1,:U?
12:Pr8hr.W1,:U?1,;HoC2-@51,:U?1,:UW8nr*58hr.W1,:U?1,;HoC2-@51,:U?1,:UW8nr*58hr.W
1,:U?1,;HoC2-@51,:U?1,:UW8nr*58hr.W1,:U?1,;HoC2-@58hr.W1,:UW8nr*58kLio1,:U?1,;Ho
C2.K=1,:U?1,:UW8nr*U1,:U?1,:U?8kNi5C&~>
<~!!!!!!!!!!!!!$#!<<*"!!!!!!!!!"!<E3%!!!!!!!!!!!!!!"!<<*"!!!!!!!!!!Bk[SK!!!!!!!!!!
!,6-J!<<*"!!!!!!!!$#Bk[SK!!!!!!!!!"!GQ6K!<<*"!!!!!!!!$#Bk[SK!!!!!!!!!"!GQ6K!<<*"
!!!!!!!!$#Bk[SK!!!!!!!!!"!GQ6K!<<*"!!!!!!!!$#Bk[SK!<<*"!!!!"!GQ6K!<E0#!!!!!!!!$#
Bk_8]!!!!!!!!!"!GQ7^!!!!!!!!!!!<HnKB`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
178.012 21.5924 mo
177.718 20.8 li
178.012 20.6906 li
178.012 21.5924 li
176.499 17.5192 mo
176.012 16.209 li
176.197 15.7254 li
177.699 15.7254 li
178.012 16.5683 li
178.012 16.9567 li
177.319 17.2143 li
176.499 17.5192 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 6.75 -102.225 115.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 18 
/M[7 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\5s[d^,U=X$5sZbA,U>ZA5pR^$,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=X$
5pR^$,U>ZA,U=W\,\UjW5pR^$BP9[t,U=X$6"jpt5s[e&BP9[t5pR^A6"jqF,U>ZABP;'),XF_0BP7~>
<~$O[=M,U=WC$O[=f,U<a*$O\4*,RXtf$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=f
,RXtf$O\4*$O[=M$VsPD,RXtf:JW5]$O[=f,Yq2],U=W\:JW5],RXu*,Yq33$O\4*:JXao$R?un:JU~>
<~0/"t37n6'&0/"tK7n53c0/#gc7kZMK0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"tK
7kZMK0/#gc0/"t305"of7kZMKB4j_)0/"tK7qZI)7n6'>B4j_)7kZMc7qZII0/#gcB4kj101SNFB4h~>
<~9he>V:/4PY9he>W:/4MX9heAX:/+GW9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>W
:/+GW9heAX9he>V9t%K*:/+GW[^Jq+9he>W::@T+:/4PZ[^Jq+:/+GX::@U>9heAX[^NV=9hnHl[^H~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
174.028 21.7256 mo
173.904 21.7256 li
174.919 19.0685 li
175.009 19.1021 li
174.028 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3.375 -104.475 115.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 9 
/M[5 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~'GN8V=;2H(0j#,('GN89'GM69'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'E~>
<~$O\4*:C@OU,YndU$O\3f$O[=f$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$N~>
<~'br;P9beBp/PQrp'br;8'bqH8'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'`~>
<~KS5#3m=^.GK^FGGKS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
178.012 21.7256 mo
184.012 21.7256 li
184.012 15.7254 li
178.012 15.7254 li
178.012 21.7256 li
clp
179.933 21.7256 mo
179.929 21.7256 li
179.358 20.1904 li
178.538 20.4951 li
178.012 19.0794 li
178.012 16.9567 li
178.139 16.9096 li
178.012 16.5683 li
178.012 15.7349 li
179.933 21.7256 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 6.75 -100.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 18 
/M[7 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'F5pR^hBP9[t,U@&:BL+p0,XF^^BP9[t5s[eMBL+p0,U>ZABP8Y:,XF_0BI"iK,U>ZA,U=W\,XF^A
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,XF^^,U=W\5s[d^,U=X$5sZbA,U<~>
<~:/4P0,RXuT:/3&[$O]^):*_(m$R?uC:/3&[,U=X1:*_(m$O\4*:/20)$R?um:(%F;$O\4*$O[=M$R?u*
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$R?uC$O[=M,U=WC$O[=f,U<a*$OZ~>
<~B4kjI7kZN.B4j_)0/$sNB1GHF01SN&B4j_)7n6'^B1GHF0/#gcB4ikN01SNFB.knk0/#gc0/"t301SMc
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t301SN&0/"t37n6'&0/"tK7n53c0/!~>
<~Bk_8^!<<+6Bk[SK!!$_IB`S57!!**$Bk[SK!<E48B`S57!!!$#Bk[PI!!*+7B`J,5!!!$#!!!!!!!**#
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!**$!!!!!!<E3$!!!!"!<E0#!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
178.062 21.7256 mo
178.012 21.7256 li
178.012 21.5924 li
178.062 21.7256 li
178.012 20.6906 mo
178.012 19.0794 li
178.538 20.4951 li
178.012 20.6906 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.125 0 0 3.375 -100.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 9 
/M[3 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1,:U?1,:U?1,:U?1,:U?1,;X$:JXb^:JXa~>
<~%1NaU%1NaU%1NaU%1NaU%1OX2-71&d-71&~>
<~1,:U?1,:U?1,:U?1,:U?1,;Ho8kM]J8kM\~>
<~!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!<E3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
179.929 21.7256 mo
178.062 21.7256 li
178.012 21.5924 li
178.012 20.6906 li
178.538 20.4951 li
179.358 20.1904 li
179.929 21.7256 li
178.012 16.9567 mo
178.012 16.5683 li
178.139 16.9096 li
178.012 16.9567 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.625 0 0 6 -100.35 115.123 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 16 
/M[7 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP;'F5pR^A5s]0t5s[e&6"jpt5pR^$5s]0t,U=X$6"jpW,U=W\5sZbA,U=X$5pR^$,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=X$5sZbA,U>ZA5pR^$,XF^^,U=W\~>
<~:JXb3,RXu*,U?/],U=W\,Yq2],RXtf,U?/]$O[=f,Yq2D$O[=M,U<a*$O[=f,RXtf$O[=M$O[=M$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=f,U<a*$O\4*,RXtf$R?uC$O[=M~>
<~B4kjI7kZMc7n73)7n6'>7qZI)7kZMK7n73)0/"tK7qZHf0/"t37n53c0/"tK7kZMK0/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"tK7n53c0/#gc7kZMK01SN&0/"t3~>
<~[^NV>:/+GX:/87+:/4PZ::@T+:/+GW:/87+9he>W::@T*9he>V:/4MX9he>W:/+GW9he>V9he>V9he>V
9he>V9he>V9he>V9he>V9he>V9he>V9he>W:/4MX9heAX:/+GW9hnGY9he>V~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
172.012 15.7254 mo
178.012 15.7254 li
178.012 9.72556 li
172.012 9.72556 li
172.012 15.7254 li
clp
178.009 15.7254 mo
177.699 15.7254 li
176.958 13.7317 li
177.182 13.1456 li
178.009 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[1.875 0 0 3.375 -101.475 121.123 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 9 
/M[5 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~,U=W\,U=W\,U>ZA,U=X$5pR^$BP9[t6"jpt5s[e&BP;'F6"jqF5s]0tBE~>
<~$O[=M$O[=M$O\4*$O[=f,RXtf:/3&[,Yh)[,U=W\:/4P0,Yh*0,U?,[:&~>
<~0/"t30/"t30/#gc0/"tK7kZMKB4j_)7qZI)7n6'>B4kjI7qZII7n73)B)~>
<~!!!!!!!!!!!!!$#!!!!"!<<*"Bk[SK!GQ6K!<E3%Bk_8^!GQ7^!<HnKB`~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
177.699 15.7254 mo
176.197 15.7254 li
176.958 13.7317 li
177.699 15.7254 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 277.988 137.224 ]ct
[2.25 0 0 2.625 -102.225 121.123 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 7 
/M[6 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BP9[t,U@&:5sZbA5s]0t5s[e&BP9[t,U>ZABP8Y:5s]0t,U>ZABP7~>
<~:JW5]$O]a+,U<a*,U?/],U=W\:JW5]$O\4*:JV?+,U?/]$O\4*:JU~>
<~B4j_)0/$sN7n53c7n73)7n6'>B4j_)0/#gcB4ikN7n73)0/#gcB4h~>
<~[^Jq+9hi():/4MX:/87+:/4PZ[^Jq+9heAX[^Jn):/87+9heAX[^H~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
grestore
1.25 lw
[5 2.5 ] 0 dsh
56.0024 .385437 mo
56.0024 68.6554 li
0 gry
@
71.6724 .545441 mo
71.6724 97.1454 li
@
1.75 lw
1 lc
1 lj
[] 0 dsh
205.492 24.1354 mo
41.2724 24.1354 li
@
204.692 20.9454 mo
211.072 24.1354 li
204.692 27.3254 li
204.692 20.9454 li
cp
ef
.349 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
135.392 134.475 mo
(Freq. guards)
[5.49893 3.50107 5.03101 5.49893 2.42099 2.50201 5.52591 5.49893 5.04901 3.50107 5.49893 0 
]xsh
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
130.682 66.3154 mo
(902.9 MHz)
[5.03101 4.923 5.03098 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
1 lw
151.812 121.365 mo
168.532 121.365 li
.349 gry
@
152.422 123.806 mo
147.543 121.365 li
152.422 118.925 li
152.422 123.806 li
ef
167.922 118.925 mo
172.802 121.365 li
167.922 123.805 li
167.922 118.925 li
cp
ef
32.5824 67.9654 mo
88.1844 67.9654 li
88.1844 58.6038 li
32.5824 58.6038 li
cp
1 gry
ef
1.25 lw
0 lc
0 lj
[5 2.5 ] 0 dsh
87.8524 .385437 mo
87.8524 128.265 li
0 gry
@
32.5824 100.085 mo
88.1844 100.085 li
88.1844 91.154 li
32.5824 91.154 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
47.9124 98.7654 mo
(902.4 MHz)
[5.03101 4.923 5.03098 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
184.192 .705444 mo
184.192 127.665 li
@
138.542 101.275 mo
194.144 101.275 li
194.144 91.0164 li
138.542 91.0164 li
138.542 101.275 li
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
147.392 98.8154 mo
(903.0 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
1 lw
1 lc
1 lj
[] 0 dsh
104.122 121.365 mo
119.762 121.365 li
.349 gry
@
104.732 123.805 mo
99.8524 121.365 li
104.732 118.925 li
104.732 123.805 li
cp
ef
119.153 118.925 mo
124.032 121.365 li
119.153 123.806 li
119.153 118.925 li
ef
152.792 34.4854 mo
191.185 34.4854 li
191.185 25.4106 li
152.792 25.4106 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
163.252 33.1754 mo
(903.1 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
50.2924 35.4754 mo
79.5564 35.4754 li
79.5564 25.4074 li
50.2924 25.4074 li
cp
1 gry
ef
0 gry
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
38.4524 32.9854 mo
(902.3 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
115.193 57.5754 mo
91.0125 57.5754 li
98.9224 36.9055 li
107.292 36.9055 li
115.193 57.5754 li
0 .0564706 .335686 0 cmyk
f
1.75 lw
2 lc
0 lj
91.0124 57.5754 mo
115.192 57.5754 li
107.292 36.9054 li
98.9224 36.9054 li
91.0124 57.5754 li
cp
.0471 gry
@
164.052 57.5754 mo
139.872 57.5754 li
147.772 36.9055 li
156.143 36.9055 li
164.052 57.5754 li
0 .0564706 .335686 0 cmyk
f
139.872 57.5754 mo
164.052 57.5754 li
156.142 36.9054 li
147.772 36.9054 li
139.872 57.5754 li
cp
.0471 gry
@
147.872 124.585 mo
123.702 124.585 li
131.603 102.146 li
139.972 102.146 li
147.872 124.585 li
.119492 0 .187313 0 cmyk
f
2 lw
0 lc
[40 8 16 8 ] 0 dsh
123.702 124.585 mo
147.872 124.585 li
139.972 102.145 li
131.602 102.145 li
123.702 124.585 li
cp
.0471 gry
@
0 gry
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
4.56238 50.4554 mo
(Op. 1)
[7.78873 6.10541 2.76886 2.76889 0 ]xsh
PHWXKI+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
38.4524 66.1054 mo
(902.3 MHz)
[5.03101 4.92297 5.03101 2.50201 5.04898 2.50201 7.46094 6.49799 0 ]xsh
PHWXKJ+Arial-BoldItalicMT*1 [9 0 0 -9 0 0 ]msf
212.672 30.0754 mo
(Freq.)
[5.49893 3.50107 5.03101 5.49893 0 ]xsh
PHWXKK+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
207.052 18.4354 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
206.882 118.905 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
206.882 85.2254 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
206.882 53.7854 mo
(\267\267\267)
[4.79608 4.79605 0 ]xsh
1.75 lw
1 lc
1 lj
[] 0 dsh
205.152 57.6154 mo
41.2724 57.6154 li
@
204.362 54.4254 mo
210.742 57.6154 li
204.362 60.8054 li
204.362 54.4254 li
cp
ef
205.492 90.2954 mo
41.2724 90.2954 li
@
204.692 87.1054 mo
211.072 90.2954 li
204.692 93.4854 li
204.692 87.1054 li
cp
ef
205.152 124.795 mo
41.2724 124.795 li
@
204.362 121.605 mo
210.742 124.795 li
204.362 127.985 li
204.362 121.605 li
cp
ef
PHWXKI+Arial-BoldMT*1 [9.96 0 0 -9.96 0 0 ]msf
4.44238 82.8754 mo
(Op. 2)
[7.78873 6.10541 2.76886 2.76889 0 ]xsh
4.44238 117.535 mo
(Op. 3)
[7.78873 6.10541 2.76886 2.76889 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
/PHWXKI+Arial-BoldMT*1 uf
/PHWXKI+Arial-BoldMT uf
/JAAAAA+Arial-BoldMT uf
/PHWXKK+Calibri-Bold*1 uf
/PHWXKK+Calibri-Bold uf
/YAAAAA+Calibri-Bold uf
/PHWXKJ+Arial-BoldItalicMT*1 uf
/PHWXKJ+Arial-BoldItalicMT uf
/WAAAAA+Arial-BoldItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
